// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: api/protobuf-spec/connection_meeting_v1.proto

package meetingpb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Meeting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Location    string               `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	CreatorId   string               `protobuf:"bytes,11,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Beginning   *timestamp.Timestamp `protobuf:"bytes,4,opt,name=beginning,proto3" json:"beginning,omitempty"`
	Accepted    *timestamp.Timestamp `protobuf:"bytes,5,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Created     *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	Updated     *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated,proto3" json:"updated,omitempty"`
	Canceled    *timestamp.Timestamp `protobuf:"bytes,8,opt,name=canceled,proto3" json:"canceled,omitempty"`
	Declined    *timestamp.Timestamp `protobuf:"bytes,9,opt,name=declined,proto3" json:"declined,omitempty"`
	Ending      *timestamp.Timestamp `protobuf:"bytes,10,opt,name=ending,proto3" json:"ending,omitempty"`
}

func (x *Meeting) Reset() {
	*x = Meeting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meeting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meeting) ProtoMessage() {}

func (x *Meeting) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meeting.ProtoReflect.Descriptor instead.
func (*Meeting) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{0}
}

func (x *Meeting) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Meeting) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Meeting) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Meeting) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *Meeting) GetBeginning() *timestamp.Timestamp {
	if x != nil {
		return x.Beginning
	}
	return nil
}

func (x *Meeting) GetAccepted() *timestamp.Timestamp {
	if x != nil {
		return x.Accepted
	}
	return nil
}

func (x *Meeting) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Meeting) GetUpdated() *timestamp.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Meeting) GetCanceled() *timestamp.Timestamp {
	if x != nil {
		return x.Canceled
	}
	return nil
}

func (x *Meeting) GetDeclined() *timestamp.Timestamp {
	if x != nil {
		return x.Declined
	}
	return nil
}

func (x *Meeting) GetEnding() *timestamp.Timestamp {
	if x != nil {
		return x.Ending
	}
	return nil
}

type MeetingVibe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FeelingClose       float32              `protobuf:"fixed32,3,opt,name=feeling_close,json=feelingClose,proto3" json:"feeling_close,omitempty"`
	RelationshipNature float32              `protobuf:"fixed32,4,opt,name=relationship_nature,json=relationshipNature,proto3" json:"relationship_nature,omitempty"`
	HelpfulForJourney  float32              `protobuf:"fixed32,5,opt,name=helpful_for_journey,json=helpfulForJourney,proto3" json:"helpful_for_journey,omitempty"`
	PersonalNotes      string               `protobuf:"bytes,6,opt,name=personal_notes,json=personalNotes,proto3" json:"personal_notes,omitempty"`
	ValueA             bool                 `protobuf:"varint,7,opt,name=value_a,json=valueA,proto3" json:"value_a,omitempty"`
	ValueB             bool                 `protobuf:"varint,8,opt,name=value_b,json=valueB,proto3" json:"value_b,omitempty"`
	ValueC             bool                 `protobuf:"varint,9,opt,name=value_c,json=valueC,proto3" json:"value_c,omitempty"`
	Created            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created,proto3" json:"created,omitempty"`
	Updated            *timestamp.Timestamp `protobuf:"bytes,11,opt,name=updated,proto3" json:"updated,omitempty"`
	MeetingId          string               `protobuf:"bytes,12,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
}

func (x *MeetingVibe) Reset() {
	*x = MeetingVibe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeetingVibe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingVibe) ProtoMessage() {}

func (x *MeetingVibe) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingVibe.ProtoReflect.Descriptor instead.
func (*MeetingVibe) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{1}
}

func (x *MeetingVibe) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MeetingVibe) GetFeelingClose() float32 {
	if x != nil {
		return x.FeelingClose
	}
	return 0
}

func (x *MeetingVibe) GetRelationshipNature() float32 {
	if x != nil {
		return x.RelationshipNature
	}
	return 0
}

func (x *MeetingVibe) GetHelpfulForJourney() float32 {
	if x != nil {
		return x.HelpfulForJourney
	}
	return 0
}

func (x *MeetingVibe) GetPersonalNotes() string {
	if x != nil {
		return x.PersonalNotes
	}
	return ""
}

func (x *MeetingVibe) GetValueA() bool {
	if x != nil {
		return x.ValueA
	}
	return false
}

func (x *MeetingVibe) GetValueB() bool {
	if x != nil {
		return x.ValueB
	}
	return false
}

func (x *MeetingVibe) GetValueC() bool {
	if x != nil {
		return x.ValueC
	}
	return false
}

func (x *MeetingVibe) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *MeetingVibe) GetUpdated() *timestamp.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *MeetingVibe) GetMeetingId() string {
	if x != nil {
		return x.MeetingId
	}
	return ""
}

type UserMeetingConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetingId     string `protobuf:"bytes,1,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	InvitedUserId string `protobuf:"bytes,2,opt,name=invited_user_id,json=invitedUserId,proto3" json:"invited_user_id,omitempty"`
	New           bool   `protobuf:"varint,3,opt,name=new,proto3" json:"new,omitempty"`
}

func (x *UserMeetingConnection) Reset() {
	*x = UserMeetingConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMeetingConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMeetingConnection) ProtoMessage() {}

func (x *UserMeetingConnection) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMeetingConnection.ProtoReflect.Descriptor instead.
func (*UserMeetingConnection) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{2}
}

func (x *UserMeetingConnection) GetMeetingId() string {
	if x != nil {
		return x.MeetingId
	}
	return ""
}

func (x *UserMeetingConnection) GetInvitedUserId() string {
	if x != nil {
		return x.InvitedUserId
	}
	return ""
}

func (x *UserMeetingConnection) GetNew() bool {
	if x != nil {
		return x.New
	}
	return false
}

type GetMeetingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMeetingRequest) Reset() {
	*x = GetMeetingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingRequest) ProtoMessage() {}

func (x *GetMeetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingRequest.ProtoReflect.Descriptor instead.
func (*GetMeetingRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{3}
}

func (x *GetMeetingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetMeetingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meeting *Meeting `protobuf:"bytes,1,opt,name=meeting,proto3" json:"meeting,omitempty"`
}

func (x *GetMeetingResponse) Reset() {
	*x = GetMeetingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingResponse) ProtoMessage() {}

func (x *GetMeetingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingResponse.ProtoReflect.Descriptor instead.
func (*GetMeetingResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{4}
}

func (x *GetMeetingResponse) GetMeeting() *Meeting {
	if x != nil {
		return x.Meeting
	}
	return nil
}

type GetMeetingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetMeetingsRequest) Reset() {
	*x = GetMeetingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingsRequest) ProtoMessage() {}

func (x *GetMeetingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingsRequest.ProtoReflect.Descriptor instead.
func (*GetMeetingsRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{5}
}

func (x *GetMeetingsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetMeetingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meetings []*Meeting `protobuf:"bytes,1,rep,name=meetings,proto3" json:"meetings,omitempty"`
}

func (x *GetMeetingsResponse) Reset() {
	*x = GetMeetingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingsResponse) ProtoMessage() {}

func (x *GetMeetingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingsResponse.ProtoReflect.Descriptor instead.
func (*GetMeetingsResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{6}
}

func (x *GetMeetingsResponse) GetMeetings() []*Meeting {
	if x != nil {
		return x.Meetings
	}
	return nil
}

type SendMeetingInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Beginning   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=beginning,proto3" json:"beginning,omitempty"`
	Ending      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=ending,proto3" json:"ending,omitempty"`
	Description string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Location    string               `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	UserFrom    string               `protobuf:"bytes,5,opt,name=user_from,json=userFrom,proto3" json:"user_from,omitempty"`
	UserTo      string               `protobuf:"bytes,6,opt,name=user_to,json=userTo,proto3" json:"user_to,omitempty"`
}

func (x *SendMeetingInviteRequest) Reset() {
	*x = SendMeetingInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMeetingInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMeetingInviteRequest) ProtoMessage() {}

func (x *SendMeetingInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMeetingInviteRequest.ProtoReflect.Descriptor instead.
func (*SendMeetingInviteRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{7}
}

func (x *SendMeetingInviteRequest) GetBeginning() *timestamp.Timestamp {
	if x != nil {
		return x.Beginning
	}
	return nil
}

func (x *SendMeetingInviteRequest) GetEnding() *timestamp.Timestamp {
	if x != nil {
		return x.Ending
	}
	return nil
}

func (x *SendMeetingInviteRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SendMeetingInviteRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *SendMeetingInviteRequest) GetUserFrom() string {
	if x != nil {
		return x.UserFrom
	}
	return ""
}

func (x *SendMeetingInviteRequest) GetUserTo() string {
	if x != nil {
		return x.UserTo
	}
	return ""
}

type SendMeetingInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendMeetingInviteResponse) Reset() {
	*x = SendMeetingInviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMeetingInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMeetingInviteResponse) ProtoMessage() {}

func (x *SendMeetingInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMeetingInviteResponse.ProtoReflect.Descriptor instead.
func (*SendMeetingInviteResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{8}
}

func (x *SendMeetingInviteResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateMeetingInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Beginning   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=beginning,proto3" json:"beginning,omitempty"`
	Ending      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=ending,proto3" json:"ending,omitempty"`
	Description string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Location    string               `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	Id          string               `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	UserFrom    string               `protobuf:"bytes,6,opt,name=userFrom,proto3" json:"userFrom,omitempty"`
}

func (x *UpdateMeetingInviteRequest) Reset() {
	*x = UpdateMeetingInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMeetingInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMeetingInviteRequest) ProtoMessage() {}

func (x *UpdateMeetingInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMeetingInviteRequest.ProtoReflect.Descriptor instead.
func (*UpdateMeetingInviteRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateMeetingInviteRequest) GetBeginning() *timestamp.Timestamp {
	if x != nil {
		return x.Beginning
	}
	return nil
}

func (x *UpdateMeetingInviteRequest) GetEnding() *timestamp.Timestamp {
	if x != nil {
		return x.Ending
	}
	return nil
}

func (x *UpdateMeetingInviteRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateMeetingInviteRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *UpdateMeetingInviteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateMeetingInviteRequest) GetUserFrom() string {
	if x != nil {
		return x.UserFrom
	}
	return ""
}

type AcceptMeetingInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetingId string `protobuf:"bytes,1,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AcceptMeetingInviteRequest) Reset() {
	*x = AcceptMeetingInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptMeetingInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptMeetingInviteRequest) ProtoMessage() {}

func (x *AcceptMeetingInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptMeetingInviteRequest.ProtoReflect.Descriptor instead.
func (*AcceptMeetingInviteRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{10}
}

func (x *AcceptMeetingInviteRequest) GetMeetingId() string {
	if x != nil {
		return x.MeetingId
	}
	return ""
}

func (x *AcceptMeetingInviteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CancelMeetingInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetingId string `protobuf:"bytes,1,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CancelMeetingInviteRequest) Reset() {
	*x = CancelMeetingInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMeetingInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMeetingInviteRequest) ProtoMessage() {}

func (x *CancelMeetingInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMeetingInviteRequest.ProtoReflect.Descriptor instead.
func (*CancelMeetingInviteRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{11}
}

func (x *CancelMeetingInviteRequest) GetMeetingId() string {
	if x != nil {
		return x.MeetingId
	}
	return ""
}

func (x *CancelMeetingInviteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeclineMeetingInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetingId string `protobuf:"bytes,1,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeclineMeetingInviteRequest) Reset() {
	*x = DeclineMeetingInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineMeetingInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineMeetingInviteRequest) ProtoMessage() {}

func (x *DeclineMeetingInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineMeetingInviteRequest.ProtoReflect.Descriptor instead.
func (*DeclineMeetingInviteRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{12}
}

func (x *DeclineMeetingInviteRequest) GetMeetingId() string {
	if x != nil {
		return x.MeetingId
	}
	return ""
}

func (x *DeclineMeetingInviteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUpcomingMeetingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUpcomingMeetingsRequest) Reset() {
	*x = GetUpcomingMeetingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpcomingMeetingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpcomingMeetingsRequest) ProtoMessage() {}

func (x *GetUpcomingMeetingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpcomingMeetingsRequest.ProtoReflect.Descriptor instead.
func (*GetUpcomingMeetingsRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{13}
}

func (x *GetUpcomingMeetingsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUpcomingMeetingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meetings []*UserMeetingConnection `protobuf:"bytes,1,rep,name=meetings,proto3" json:"meetings,omitempty"`
}

func (x *GetUpcomingMeetingsResponse) Reset() {
	*x = GetUpcomingMeetingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpcomingMeetingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpcomingMeetingsResponse) ProtoMessage() {}

func (x *GetUpcomingMeetingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpcomingMeetingsResponse.ProtoReflect.Descriptor instead.
func (*GetUpcomingMeetingsResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{14}
}

func (x *GetUpcomingMeetingsResponse) GetMeetings() []*UserMeetingConnection {
	if x != nil {
		return x.Meetings
	}
	return nil
}

type GetPendingMeetingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IncludeVibed bool   `protobuf:"varint,2,opt,name=includeVibed,proto3" json:"includeVibed,omitempty"`
}

func (x *GetPendingMeetingsRequest) Reset() {
	*x = GetPendingMeetingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPendingMeetingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingMeetingsRequest) ProtoMessage() {}

func (x *GetPendingMeetingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingMeetingsRequest.ProtoReflect.Descriptor instead.
func (*GetPendingMeetingsRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{15}
}

func (x *GetPendingMeetingsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetPendingMeetingsRequest) GetIncludeVibed() bool {
	if x != nil {
		return x.IncludeVibed
	}
	return false
}

type GetPendingMeetingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meetings []*UserMeetingConnection `protobuf:"bytes,1,rep,name=meetings,proto3" json:"meetings,omitempty"`
}

func (x *GetPendingMeetingsResponse) Reset() {
	*x = GetPendingMeetingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPendingMeetingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingMeetingsResponse) ProtoMessage() {}

func (x *GetPendingMeetingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingMeetingsResponse.ProtoReflect.Descriptor instead.
func (*GetPendingMeetingsResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{16}
}

func (x *GetPendingMeetingsResponse) GetMeetings() []*UserMeetingConnection {
	if x != nil {
		return x.Meetings
	}
	return nil
}

type GetUpcomingMeetingBetweenUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormUserId string `protobuf:"bytes,1,opt,name=form_user_id,json=formUserId,proto3" json:"form_user_id,omitempty"`
	ToUserId   string `protobuf:"bytes,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
}

func (x *GetUpcomingMeetingBetweenUsersRequest) Reset() {
	*x = GetUpcomingMeetingBetweenUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpcomingMeetingBetweenUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpcomingMeetingBetweenUsersRequest) ProtoMessage() {}

func (x *GetUpcomingMeetingBetweenUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpcomingMeetingBetweenUsersRequest.ProtoReflect.Descriptor instead.
func (*GetUpcomingMeetingBetweenUsersRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{17}
}

func (x *GetUpcomingMeetingBetweenUsersRequest) GetFormUserId() string {
	if x != nil {
		return x.FormUserId
	}
	return ""
}

func (x *GetUpcomingMeetingBetweenUsersRequest) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

type GetUpcomingMeetingBetweenUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetingId string `protobuf:"bytes,1,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
}

func (x *GetUpcomingMeetingBetweenUsersResponse) Reset() {
	*x = GetUpcomingMeetingBetweenUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpcomingMeetingBetweenUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpcomingMeetingBetweenUsersResponse) ProtoMessage() {}

func (x *GetUpcomingMeetingBetweenUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpcomingMeetingBetweenUsersResponse.ProtoReflect.Descriptor instead.
func (*GetUpcomingMeetingBetweenUsersResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{18}
}

func (x *GetUpcomingMeetingBetweenUsersResponse) GetMeetingId() string {
	if x != nil {
		return x.MeetingId
	}
	return ""
}

type SendMeetingVibeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetingId   string       `protobuf:"bytes,1,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	FromUserId  string       `protobuf:"bytes,2,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToUserId    string       `protobuf:"bytes,3,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
	MeetingVibe *MeetingVibe `protobuf:"bytes,4,opt,name=meeting_vibe,json=meetingVibe,proto3" json:"meeting_vibe,omitempty"`
}

func (x *SendMeetingVibeRequest) Reset() {
	*x = SendMeetingVibeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMeetingVibeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMeetingVibeRequest) ProtoMessage() {}

func (x *SendMeetingVibeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMeetingVibeRequest.ProtoReflect.Descriptor instead.
func (*SendMeetingVibeRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{19}
}

func (x *SendMeetingVibeRequest) GetMeetingId() string {
	if x != nil {
		return x.MeetingId
	}
	return ""
}

func (x *SendMeetingVibeRequest) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *SendMeetingVibeRequest) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

func (x *SendMeetingVibeRequest) GetMeetingVibe() *MeetingVibe {
	if x != nil {
		return x.MeetingVibe
	}
	return nil
}

type SendMeetingVibeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendMeetingVibeResponse) Reset() {
	*x = SendMeetingVibeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMeetingVibeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMeetingVibeResponse) ProtoMessage() {}

func (x *SendMeetingVibeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMeetingVibeResponse.ProtoReflect.Descriptor instead.
func (*SendMeetingVibeResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{20}
}

func (x *SendMeetingVibeResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetMeetingVibeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VibeId string `protobuf:"bytes,1,opt,name=vibe_id,json=vibeId,proto3" json:"vibe_id,omitempty"`
}

func (x *GetMeetingVibeRequest) Reset() {
	*x = GetMeetingVibeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetingVibeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingVibeRequest) ProtoMessage() {}

func (x *GetMeetingVibeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingVibeRequest.ProtoReflect.Descriptor instead.
func (*GetMeetingVibeRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{21}
}

func (x *GetMeetingVibeRequest) GetVibeId() string {
	if x != nil {
		return x.VibeId
	}
	return ""
}

type GetMeetingVibeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vibe *MeetingVibe `protobuf:"bytes,1,opt,name=vibe,proto3" json:"vibe,omitempty"`
}

func (x *GetMeetingVibeResponse) Reset() {
	*x = GetMeetingVibeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetingVibeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingVibeResponse) ProtoMessage() {}

func (x *GetMeetingVibeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingVibeResponse.ProtoReflect.Descriptor instead.
func (*GetMeetingVibeResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{22}
}

func (x *GetMeetingVibeResponse) GetVibe() *MeetingVibe {
	if x != nil {
		return x.Vibe
	}
	return nil
}

type GetMeetingVibesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetMeetingVibesRequest) Reset() {
	*x = GetMeetingVibesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetingVibesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingVibesRequest) ProtoMessage() {}

func (x *GetMeetingVibesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingVibesRequest.ProtoReflect.Descriptor instead.
func (*GetMeetingVibesRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{23}
}

func (x *GetMeetingVibesRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetMeetingVibesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vibes []*MeetingVibe `protobuf:"bytes,1,rep,name=vibes,proto3" json:"vibes,omitempty"`
}

func (x *GetMeetingVibesResponse) Reset() {
	*x = GetMeetingVibesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetingVibesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingVibesResponse) ProtoMessage() {}

func (x *GetMeetingVibesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingVibesResponse.ProtoReflect.Descriptor instead.
func (*GetMeetingVibesResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{24}
}

func (x *GetMeetingVibesResponse) GetVibes() []*MeetingVibe {
	if x != nil {
		return x.Vibes
	}
	return nil
}

type GetMeetingVibesSentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetMeetingVibesSentRequest) Reset() {
	*x = GetMeetingVibesSentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetingVibesSentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingVibesSentRequest) ProtoMessage() {}

func (x *GetMeetingVibesSentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingVibesSentRequest.ProtoReflect.Descriptor instead.
func (*GetMeetingVibesSentRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{25}
}

func (x *GetMeetingVibesSentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MeetingVibesSentConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VibeId   string `protobuf:"bytes,1,opt,name=vibe_id,json=vibeId,proto3" json:"vibe_id,omitempty"`
	ToUserId string `protobuf:"bytes,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
}

func (x *MeetingVibesSentConnection) Reset() {
	*x = MeetingVibesSentConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeetingVibesSentConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingVibesSentConnection) ProtoMessage() {}

func (x *MeetingVibesSentConnection) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingVibesSentConnection.ProtoReflect.Descriptor instead.
func (*MeetingVibesSentConnection) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{26}
}

func (x *MeetingVibesSentConnection) GetVibeId() string {
	if x != nil {
		return x.VibeId
	}
	return ""
}

func (x *MeetingVibesSentConnection) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

type GetMeetingVibesSentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VibesConnection []*MeetingVibesSentConnection `protobuf:"bytes,1,rep,name=vibes_connection,json=vibesConnection,proto3" json:"vibes_connection,omitempty"`
}

func (x *GetMeetingVibesSentResponse) Reset() {
	*x = GetMeetingVibesSentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetingVibesSentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingVibesSentResponse) ProtoMessage() {}

func (x *GetMeetingVibesSentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingVibesSentResponse.ProtoReflect.Descriptor instead.
func (*GetMeetingVibesSentResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{27}
}

func (x *GetMeetingVibesSentResponse) GetVibesConnection() []*MeetingVibesSentConnection {
	if x != nil {
		return x.VibesConnection
	}
	return nil
}

type GetMeetingVibesReceivedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetMeetingVibesReceivedRequest) Reset() {
	*x = GetMeetingVibesReceivedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetingVibesReceivedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingVibesReceivedRequest) ProtoMessage() {}

func (x *GetMeetingVibesReceivedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingVibesReceivedRequest.ProtoReflect.Descriptor instead.
func (*GetMeetingVibesReceivedRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{28}
}

func (x *GetMeetingVibesReceivedRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MeetingVibesReceivedConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VibeId     string `protobuf:"bytes,1,opt,name=vibe_id,json=vibeId,proto3" json:"vibe_id,omitempty"`
	FromUserId string `protobuf:"bytes,2,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
}

func (x *MeetingVibesReceivedConnection) Reset() {
	*x = MeetingVibesReceivedConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeetingVibesReceivedConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingVibesReceivedConnection) ProtoMessage() {}

func (x *MeetingVibesReceivedConnection) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingVibesReceivedConnection.ProtoReflect.Descriptor instead.
func (*MeetingVibesReceivedConnection) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{29}
}

func (x *MeetingVibesReceivedConnection) GetVibeId() string {
	if x != nil {
		return x.VibeId
	}
	return ""
}

func (x *MeetingVibesReceivedConnection) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

type GetMeetingVibesReceivedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VibesConnection []*MeetingVibesReceivedConnection `protobuf:"bytes,1,rep,name=vibes_connection,json=vibesConnection,proto3" json:"vibes_connection,omitempty"`
}

func (x *GetMeetingVibesReceivedResponse) Reset() {
	*x = GetMeetingVibesReceivedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetingVibesReceivedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingVibesReceivedResponse) ProtoMessage() {}

func (x *GetMeetingVibesReceivedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingVibesReceivedResponse.ProtoReflect.Descriptor instead.
func (*GetMeetingVibesReceivedResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{30}
}

func (x *GetMeetingVibesReceivedResponse) GetVibesConnection() []*MeetingVibesReceivedConnection {
	if x != nil {
		return x.VibesConnection
	}
	return nil
}

type GetMeetingVibesFromMeetingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetingId string `protobuf:"bytes,1,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
}

func (x *GetMeetingVibesFromMeetingRequest) Reset() {
	*x = GetMeetingVibesFromMeetingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetingVibesFromMeetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingVibesFromMeetingRequest) ProtoMessage() {}

func (x *GetMeetingVibesFromMeetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingVibesFromMeetingRequest.ProtoReflect.Descriptor instead.
func (*GetMeetingVibesFromMeetingRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{31}
}

func (x *GetMeetingVibesFromMeetingRequest) GetMeetingId() string {
	if x != nil {
		return x.MeetingId
	}
	return ""
}

type GetMeetingVibesFromMeetingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VibeIds []string `protobuf:"bytes,1,rep,name=vibe_ids,json=vibeIds,proto3" json:"vibe_ids,omitempty"`
}

func (x *GetMeetingVibesFromMeetingResponse) Reset() {
	*x = GetMeetingVibesFromMeetingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetingVibesFromMeetingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingVibesFromMeetingResponse) ProtoMessage() {}

func (x *GetMeetingVibesFromMeetingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingVibesFromMeetingResponse.ProtoReflect.Descriptor instead.
func (*GetMeetingVibesFromMeetingResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{32}
}

func (x *GetMeetingVibesFromMeetingResponse) GetVibeIds() []string {
	if x != nil {
		return x.VibeIds
	}
	return nil
}

type FetchNumberOfNewConnectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *FetchNumberOfNewConnectionsRequest) Reset() {
	*x = FetchNumberOfNewConnectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchNumberOfNewConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchNumberOfNewConnectionsRequest) ProtoMessage() {}

func (x *FetchNumberOfNewConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchNumberOfNewConnectionsRequest.ProtoReflect.Descriptor instead.
func (*FetchNumberOfNewConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{33}
}

func (x *FetchNumberOfNewConnectionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FetchNumberOfNewConnectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FetchNumberOfNewConnectionsResponse) Reset() {
	*x = FetchNumberOfNewConnectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchNumberOfNewConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchNumberOfNewConnectionsResponse) ProtoMessage() {}

func (x *FetchNumberOfNewConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchNumberOfNewConnectionsResponse.ProtoReflect.Descriptor instead.
func (*FetchNumberOfNewConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{34}
}

func (x *FetchNumberOfNewConnectionsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type FetchNumberOfTotalConnectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *FetchNumberOfTotalConnectionsRequest) Reset() {
	*x = FetchNumberOfTotalConnectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchNumberOfTotalConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchNumberOfTotalConnectionsRequest) ProtoMessage() {}

func (x *FetchNumberOfTotalConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchNumberOfTotalConnectionsRequest.ProtoReflect.Descriptor instead.
func (*FetchNumberOfTotalConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{35}
}

func (x *FetchNumberOfTotalConnectionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FetchNumberOfTotalConnectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FetchNumberOfTotalConnectionsResponse) Reset() {
	*x = FetchNumberOfTotalConnectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchNumberOfTotalConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchNumberOfTotalConnectionsResponse) ProtoMessage() {}

func (x *FetchNumberOfTotalConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchNumberOfTotalConnectionsResponse.ProtoReflect.Descriptor instead.
func (*FetchNumberOfTotalConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP(), []int{36}
}

func (x *FetchNumberOfTotalConnectionsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_api_protobuf_spec_connection_meeting_v1_proto protoreflect.FileDescriptor

var file_api_protobuf_spec_connection_meeting_v1_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x73,
	0x70, 0x65, 0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xf8, 0x03, 0x0a, 0x07, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65,
	0x64, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x64, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xa0, 0x03,
	0x0a, 0x0b, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x66, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68,
	0x69, 0x70, 0x5f, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x12, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x4e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x65, 0x6c, 0x70, 0x66, 0x75, 0x6c, 0x5f, 0x66,
	0x6f, 0x72, 0x5f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x11, 0x68, 0x65, 0x6c, 0x70, 0x66, 0x75, 0x6c, 0x46, 0x6f, 0x72, 0x4a, 0x6f, 0x75, 0x72,
	0x6e, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x41, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x62, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x12, 0x17, 0x0a, 0x07,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x43, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x22, 0x70, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6e,
	0x65, 0x77, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x07, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x26, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x4f, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xfc,
	0x01, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x22, 0x2b, 0x0a,
	0x19, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x1a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x62, 0x65, 0x67,
	0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x06, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f,
	0x6d, 0x22, 0x54, 0x0a, 0x1a, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x1a, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x55, 0x0a,
	0x1b, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x6d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x22, 0x58, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x56, 0x69, 0x62, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x56, 0x69, 0x62, 0x65, 0x64, 0x22, 0x64, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x6d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x22, 0x67, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x0a, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x26, 0x47,
	0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x43,
	0x0a, 0x0c, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x69, 0x62, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56,
	0x69, 0x62, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x69, 0x62, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x62, 0x65, 0x49, 0x64,
	0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x76, 0x69,
	0x62, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x52, 0x04, 0x76, 0x69, 0x62, 0x65,
	0x22, 0x2a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69,
	0x62, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x51, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x69, 0x62, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x52, 0x05, 0x76, 0x69, 0x62, 0x65, 0x73, 0x22,
	0x35, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62,
	0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x1a, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x56, 0x69, 0x62, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x69, 0x62, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x62, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x0a, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x73, 0x53, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x10, 0x76, 0x69,
	0x62, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x76, 0x69, 0x62, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x5b, 0x0a, 0x1e, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65,
	0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x69, 0x62, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x62, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x81,
	0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62,
	0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5e, 0x0a, 0x10, 0x76, 0x69, 0x62, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x73, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0f, 0x76, 0x69, 0x62, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x56, 0x69, 0x62, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x76, 0x69, 0x62, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x69, 0x62, 0x65, 0x49, 0x64, 0x73, 0x22, 0x3d, 0x0a, 0x22, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x23, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x3f, 0x0a, 0x24, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x25, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x32, 0xfc, 0x10, 0x0a, 0x0e, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x11, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x60, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x14, 0x44, 0x65, 0x63, 0x6c, 0x69,
	0x6e, 0x65, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12,
	0x30, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x2f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63,
	0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2e, 0x2e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x9b, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x3a, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63,
	0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x65, 0x74, 0x77,
	0x65, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3b, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x92,
	0x01, 0x0a, 0x1b, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4e, 0x65, 0x77, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x98, 0x01, 0x0a, 0x1d, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3a, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65,
	0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x56, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x73, 0x12, 0x2b,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56,
	0x69, 0x62, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0f, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x12, 0x2b,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x56, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x73, 0x53, 0x65,
	0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x12, 0x33, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x73, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x8f, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56,
	0x69, 0x62, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x36, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x56, 0x69, 0x62, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x62, 0x65, 0x73, 0x46, 0x72, 0x6f,
	0x6d, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x21, 0x5a, 0x1f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x3b, 0x6d, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_protobuf_spec_connection_meeting_v1_proto_rawDescOnce sync.Once
	file_api_protobuf_spec_connection_meeting_v1_proto_rawDescData = file_api_protobuf_spec_connection_meeting_v1_proto_rawDesc
)

func file_api_protobuf_spec_connection_meeting_v1_proto_rawDescGZIP() []byte {
	file_api_protobuf_spec_connection_meeting_v1_proto_rawDescOnce.Do(func() {
		file_api_protobuf_spec_connection_meeting_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_protobuf_spec_connection_meeting_v1_proto_rawDescData)
	})
	return file_api_protobuf_spec_connection_meeting_v1_proto_rawDescData
}

var file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_api_protobuf_spec_connection_meeting_v1_proto_goTypes = []interface{}{
	(*Meeting)(nil),                                // 0: connections.meeting.Meeting
	(*MeetingVibe)(nil),                            // 1: connections.meeting.MeetingVibe
	(*UserMeetingConnection)(nil),                  // 2: connections.meeting.UserMeetingConnection
	(*GetMeetingRequest)(nil),                      // 3: connections.meeting.GetMeetingRequest
	(*GetMeetingResponse)(nil),                     // 4: connections.meeting.GetMeetingResponse
	(*GetMeetingsRequest)(nil),                     // 5: connections.meeting.GetMeetingsRequest
	(*GetMeetingsResponse)(nil),                    // 6: connections.meeting.GetMeetingsResponse
	(*SendMeetingInviteRequest)(nil),               // 7: connections.meeting.SendMeetingInviteRequest
	(*SendMeetingInviteResponse)(nil),              // 8: connections.meeting.SendMeetingInviteResponse
	(*UpdateMeetingInviteRequest)(nil),             // 9: connections.meeting.UpdateMeetingInviteRequest
	(*AcceptMeetingInviteRequest)(nil),             // 10: connections.meeting.AcceptMeetingInviteRequest
	(*CancelMeetingInviteRequest)(nil),             // 11: connections.meeting.CancelMeetingInviteRequest
	(*DeclineMeetingInviteRequest)(nil),            // 12: connections.meeting.DeclineMeetingInviteRequest
	(*GetUpcomingMeetingsRequest)(nil),             // 13: connections.meeting.GetUpcomingMeetingsRequest
	(*GetUpcomingMeetingsResponse)(nil),            // 14: connections.meeting.GetUpcomingMeetingsResponse
	(*GetPendingMeetingsRequest)(nil),              // 15: connections.meeting.GetPendingMeetingsRequest
	(*GetPendingMeetingsResponse)(nil),             // 16: connections.meeting.GetPendingMeetingsResponse
	(*GetUpcomingMeetingBetweenUsersRequest)(nil),  // 17: connections.meeting.GetUpcomingMeetingBetweenUsersRequest
	(*GetUpcomingMeetingBetweenUsersResponse)(nil), // 18: connections.meeting.GetUpcomingMeetingBetweenUsersResponse
	(*SendMeetingVibeRequest)(nil),                 // 19: connections.meeting.SendMeetingVibeRequest
	(*SendMeetingVibeResponse)(nil),                // 20: connections.meeting.SendMeetingVibeResponse
	(*GetMeetingVibeRequest)(nil),                  // 21: connections.meeting.GetMeetingVibeRequest
	(*GetMeetingVibeResponse)(nil),                 // 22: connections.meeting.GetMeetingVibeResponse
	(*GetMeetingVibesRequest)(nil),                 // 23: connections.meeting.GetMeetingVibesRequest
	(*GetMeetingVibesResponse)(nil),                // 24: connections.meeting.GetMeetingVibesResponse
	(*GetMeetingVibesSentRequest)(nil),             // 25: connections.meeting.GetMeetingVibesSentRequest
	(*MeetingVibesSentConnection)(nil),             // 26: connections.meeting.MeetingVibesSentConnection
	(*GetMeetingVibesSentResponse)(nil),            // 27: connections.meeting.GetMeetingVibesSentResponse
	(*GetMeetingVibesReceivedRequest)(nil),         // 28: connections.meeting.GetMeetingVibesReceivedRequest
	(*MeetingVibesReceivedConnection)(nil),         // 29: connections.meeting.MeetingVibesReceivedConnection
	(*GetMeetingVibesReceivedResponse)(nil),        // 30: connections.meeting.GetMeetingVibesReceivedResponse
	(*GetMeetingVibesFromMeetingRequest)(nil),      // 31: connections.meeting.GetMeetingVibesFromMeetingRequest
	(*GetMeetingVibesFromMeetingResponse)(nil),     // 32: connections.meeting.GetMeetingVibesFromMeetingResponse
	(*FetchNumberOfNewConnectionsRequest)(nil),     // 33: connections.meeting.FetchNumberOfNewConnectionsRequest
	(*FetchNumberOfNewConnectionsResponse)(nil),    // 34: connections.meeting.FetchNumberOfNewConnectionsResponse
	(*FetchNumberOfTotalConnectionsRequest)(nil),   // 35: connections.meeting.FetchNumberOfTotalConnectionsRequest
	(*FetchNumberOfTotalConnectionsResponse)(nil),  // 36: connections.meeting.FetchNumberOfTotalConnectionsResponse
	(*timestamp.Timestamp)(nil),                    // 37: google.protobuf.Timestamp
	(*empty.Empty)(nil),                            // 38: google.protobuf.Empty
}
var file_api_protobuf_spec_connection_meeting_v1_proto_depIdxs = []int32{
	37, // 0: connections.meeting.Meeting.beginning:type_name -> google.protobuf.Timestamp
	37, // 1: connections.meeting.Meeting.accepted:type_name -> google.protobuf.Timestamp
	37, // 2: connections.meeting.Meeting.created:type_name -> google.protobuf.Timestamp
	37, // 3: connections.meeting.Meeting.updated:type_name -> google.protobuf.Timestamp
	37, // 4: connections.meeting.Meeting.canceled:type_name -> google.protobuf.Timestamp
	37, // 5: connections.meeting.Meeting.declined:type_name -> google.protobuf.Timestamp
	37, // 6: connections.meeting.Meeting.ending:type_name -> google.protobuf.Timestamp
	37, // 7: connections.meeting.MeetingVibe.created:type_name -> google.protobuf.Timestamp
	37, // 8: connections.meeting.MeetingVibe.updated:type_name -> google.protobuf.Timestamp
	0,  // 9: connections.meeting.GetMeetingResponse.meeting:type_name -> connections.meeting.Meeting
	0,  // 10: connections.meeting.GetMeetingsResponse.meetings:type_name -> connections.meeting.Meeting
	37, // 11: connections.meeting.SendMeetingInviteRequest.beginning:type_name -> google.protobuf.Timestamp
	37, // 12: connections.meeting.SendMeetingInviteRequest.ending:type_name -> google.protobuf.Timestamp
	37, // 13: connections.meeting.UpdateMeetingInviteRequest.beginning:type_name -> google.protobuf.Timestamp
	37, // 14: connections.meeting.UpdateMeetingInviteRequest.ending:type_name -> google.protobuf.Timestamp
	2,  // 15: connections.meeting.GetUpcomingMeetingsResponse.meetings:type_name -> connections.meeting.UserMeetingConnection
	2,  // 16: connections.meeting.GetPendingMeetingsResponse.meetings:type_name -> connections.meeting.UserMeetingConnection
	1,  // 17: connections.meeting.SendMeetingVibeRequest.meeting_vibe:type_name -> connections.meeting.MeetingVibe
	1,  // 18: connections.meeting.GetMeetingVibeResponse.vibe:type_name -> connections.meeting.MeetingVibe
	1,  // 19: connections.meeting.GetMeetingVibesResponse.vibes:type_name -> connections.meeting.MeetingVibe
	26, // 20: connections.meeting.GetMeetingVibesSentResponse.vibes_connection:type_name -> connections.meeting.MeetingVibesSentConnection
	29, // 21: connections.meeting.GetMeetingVibesReceivedResponse.vibes_connection:type_name -> connections.meeting.MeetingVibesReceivedConnection
	3,  // 22: connections.meeting.MeetingService.GetMeeting:input_type -> connections.meeting.GetMeetingRequest
	5,  // 23: connections.meeting.MeetingService.GetMeetings:input_type -> connections.meeting.GetMeetingsRequest
	7,  // 24: connections.meeting.MeetingService.SendMeetingInvite:input_type -> connections.meeting.SendMeetingInviteRequest
	9,  // 25: connections.meeting.MeetingService.UpdateMeetingInvite:input_type -> connections.meeting.UpdateMeetingInviteRequest
	10, // 26: connections.meeting.MeetingService.AcceptMeetingInvite:input_type -> connections.meeting.AcceptMeetingInviteRequest
	11, // 27: connections.meeting.MeetingService.CancelMeetingInvite:input_type -> connections.meeting.CancelMeetingInviteRequest
	12, // 28: connections.meeting.MeetingService.DeclineMeetingInvite:input_type -> connections.meeting.DeclineMeetingInviteRequest
	13, // 29: connections.meeting.MeetingService.GetUpcomingMeetings:input_type -> connections.meeting.GetUpcomingMeetingsRequest
	15, // 30: connections.meeting.MeetingService.GetPendingMeetings:input_type -> connections.meeting.GetPendingMeetingsRequest
	17, // 31: connections.meeting.MeetingService.GetUpcomingMeetingBetweenUsers:input_type -> connections.meeting.GetUpcomingMeetingBetweenUsersRequest
	33, // 32: connections.meeting.MeetingService.FetchNumberOfNewConnections:input_type -> connections.meeting.FetchNumberOfNewConnectionsRequest
	35, // 33: connections.meeting.MeetingService.FetchNumberOfTotalConnections:input_type -> connections.meeting.FetchNumberOfTotalConnectionsRequest
	21, // 34: connections.meeting.MeetingService.GetMeetingVibe:input_type -> connections.meeting.GetMeetingVibeRequest
	23, // 35: connections.meeting.MeetingService.GetMeetingVibes:input_type -> connections.meeting.GetMeetingVibesRequest
	19, // 36: connections.meeting.MeetingService.SendMeetingVibe:input_type -> connections.meeting.SendMeetingVibeRequest
	25, // 37: connections.meeting.MeetingService.GetMeetingVibesSent:input_type -> connections.meeting.GetMeetingVibesSentRequest
	28, // 38: connections.meeting.MeetingService.GetMeetingVibesReceived:input_type -> connections.meeting.GetMeetingVibesReceivedRequest
	31, // 39: connections.meeting.MeetingService.GetMeetingVibesFromMeeting:input_type -> connections.meeting.GetMeetingVibesFromMeetingRequest
	4,  // 40: connections.meeting.MeetingService.GetMeeting:output_type -> connections.meeting.GetMeetingResponse
	6,  // 41: connections.meeting.MeetingService.GetMeetings:output_type -> connections.meeting.GetMeetingsResponse
	8,  // 42: connections.meeting.MeetingService.SendMeetingInvite:output_type -> connections.meeting.SendMeetingInviteResponse
	38, // 43: connections.meeting.MeetingService.UpdateMeetingInvite:output_type -> google.protobuf.Empty
	38, // 44: connections.meeting.MeetingService.AcceptMeetingInvite:output_type -> google.protobuf.Empty
	38, // 45: connections.meeting.MeetingService.CancelMeetingInvite:output_type -> google.protobuf.Empty
	38, // 46: connections.meeting.MeetingService.DeclineMeetingInvite:output_type -> google.protobuf.Empty
	14, // 47: connections.meeting.MeetingService.GetUpcomingMeetings:output_type -> connections.meeting.GetUpcomingMeetingsResponse
	16, // 48: connections.meeting.MeetingService.GetPendingMeetings:output_type -> connections.meeting.GetPendingMeetingsResponse
	18, // 49: connections.meeting.MeetingService.GetUpcomingMeetingBetweenUsers:output_type -> connections.meeting.GetUpcomingMeetingBetweenUsersResponse
	34, // 50: connections.meeting.MeetingService.FetchNumberOfNewConnections:output_type -> connections.meeting.FetchNumberOfNewConnectionsResponse
	36, // 51: connections.meeting.MeetingService.FetchNumberOfTotalConnections:output_type -> connections.meeting.FetchNumberOfTotalConnectionsResponse
	22, // 52: connections.meeting.MeetingService.GetMeetingVibe:output_type -> connections.meeting.GetMeetingVibeResponse
	24, // 53: connections.meeting.MeetingService.GetMeetingVibes:output_type -> connections.meeting.GetMeetingVibesResponse
	20, // 54: connections.meeting.MeetingService.SendMeetingVibe:output_type -> connections.meeting.SendMeetingVibeResponse
	27, // 55: connections.meeting.MeetingService.GetMeetingVibesSent:output_type -> connections.meeting.GetMeetingVibesSentResponse
	30, // 56: connections.meeting.MeetingService.GetMeetingVibesReceived:output_type -> connections.meeting.GetMeetingVibesReceivedResponse
	32, // 57: connections.meeting.MeetingService.GetMeetingVibesFromMeeting:output_type -> connections.meeting.GetMeetingVibesFromMeetingResponse
	40, // [40:58] is the sub-list for method output_type
	22, // [22:40] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_api_protobuf_spec_connection_meeting_v1_proto_init() }
func file_api_protobuf_spec_connection_meeting_v1_proto_init() {
	if File_api_protobuf_spec_connection_meeting_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meeting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeetingVibe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMeetingConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMeetingInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMeetingInviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMeetingInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptMeetingInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelMeetingInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineMeetingInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpcomingMeetingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpcomingMeetingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPendingMeetingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPendingMeetingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpcomingMeetingBetweenUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpcomingMeetingBetweenUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMeetingVibeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMeetingVibeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetingVibeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetingVibeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetingVibesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetingVibesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetingVibesSentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeetingVibesSentConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetingVibesSentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetingVibesReceivedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeetingVibesReceivedConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetingVibesReceivedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetingVibesFromMeetingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetingVibesFromMeetingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchNumberOfNewConnectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchNumberOfNewConnectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchNumberOfTotalConnectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchNumberOfTotalConnectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_protobuf_spec_connection_meeting_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_protobuf_spec_connection_meeting_v1_proto_goTypes,
		DependencyIndexes: file_api_protobuf_spec_connection_meeting_v1_proto_depIdxs,
		MessageInfos:      file_api_protobuf_spec_connection_meeting_v1_proto_msgTypes,
	}.Build()
	File_api_protobuf_spec_connection_meeting_v1_proto = out.File
	file_api_protobuf_spec_connection_meeting_v1_proto_rawDesc = nil
	file_api_protobuf_spec_connection_meeting_v1_proto_goTypes = nil
	file_api_protobuf_spec_connection_meeting_v1_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MeetingServiceClient is the client API for MeetingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MeetingServiceClient interface {
	GetMeeting(ctx context.Context, in *GetMeetingRequest, opts ...grpc.CallOption) (*GetMeetingResponse, error)
	GetMeetings(ctx context.Context, in *GetMeetingsRequest, opts ...grpc.CallOption) (*GetMeetingsResponse, error)
	SendMeetingInvite(ctx context.Context, in *SendMeetingInviteRequest, opts ...grpc.CallOption) (*SendMeetingInviteResponse, error)
	UpdateMeetingInvite(ctx context.Context, in *UpdateMeetingInviteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	AcceptMeetingInvite(ctx context.Context, in *AcceptMeetingInviteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CancelMeetingInvite(ctx context.Context, in *CancelMeetingInviteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeclineMeetingInvite(ctx context.Context, in *DeclineMeetingInviteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetUpcomingMeetings(ctx context.Context, in *GetUpcomingMeetingsRequest, opts ...grpc.CallOption) (*GetUpcomingMeetingsResponse, error)
	GetPendingMeetings(ctx context.Context, in *GetPendingMeetingsRequest, opts ...grpc.CallOption) (*GetPendingMeetingsResponse, error)
	GetUpcomingMeetingBetweenUsers(ctx context.Context, in *GetUpcomingMeetingBetweenUsersRequest, opts ...grpc.CallOption) (*GetUpcomingMeetingBetweenUsersResponse, error)
	FetchNumberOfNewConnections(ctx context.Context, in *FetchNumberOfNewConnectionsRequest, opts ...grpc.CallOption) (*FetchNumberOfNewConnectionsResponse, error)
	FetchNumberOfTotalConnections(ctx context.Context, in *FetchNumberOfTotalConnectionsRequest, opts ...grpc.CallOption) (*FetchNumberOfTotalConnectionsResponse, error)
	GetMeetingVibe(ctx context.Context, in *GetMeetingVibeRequest, opts ...grpc.CallOption) (*GetMeetingVibeResponse, error)
	GetMeetingVibes(ctx context.Context, in *GetMeetingVibesRequest, opts ...grpc.CallOption) (*GetMeetingVibesResponse, error)
	SendMeetingVibe(ctx context.Context, in *SendMeetingVibeRequest, opts ...grpc.CallOption) (*SendMeetingVibeResponse, error)
	GetMeetingVibesSent(ctx context.Context, in *GetMeetingVibesSentRequest, opts ...grpc.CallOption) (*GetMeetingVibesSentResponse, error)
	GetMeetingVibesReceived(ctx context.Context, in *GetMeetingVibesReceivedRequest, opts ...grpc.CallOption) (*GetMeetingVibesReceivedResponse, error)
	GetMeetingVibesFromMeeting(ctx context.Context, in *GetMeetingVibesFromMeetingRequest, opts ...grpc.CallOption) (*GetMeetingVibesFromMeetingResponse, error)
}

type meetingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMeetingServiceClient(cc grpc.ClientConnInterface) MeetingServiceClient {
	return &meetingServiceClient{cc}
}

func (c *meetingServiceClient) GetMeeting(ctx context.Context, in *GetMeetingRequest, opts ...grpc.CallOption) (*GetMeetingResponse, error) {
	out := new(GetMeetingResponse)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/GetMeeting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) GetMeetings(ctx context.Context, in *GetMeetingsRequest, opts ...grpc.CallOption) (*GetMeetingsResponse, error) {
	out := new(GetMeetingsResponse)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/GetMeetings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) SendMeetingInvite(ctx context.Context, in *SendMeetingInviteRequest, opts ...grpc.CallOption) (*SendMeetingInviteResponse, error) {
	out := new(SendMeetingInviteResponse)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/SendMeetingInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) UpdateMeetingInvite(ctx context.Context, in *UpdateMeetingInviteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/UpdateMeetingInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) AcceptMeetingInvite(ctx context.Context, in *AcceptMeetingInviteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/AcceptMeetingInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) CancelMeetingInvite(ctx context.Context, in *CancelMeetingInviteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/CancelMeetingInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) DeclineMeetingInvite(ctx context.Context, in *DeclineMeetingInviteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/DeclineMeetingInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) GetUpcomingMeetings(ctx context.Context, in *GetUpcomingMeetingsRequest, opts ...grpc.CallOption) (*GetUpcomingMeetingsResponse, error) {
	out := new(GetUpcomingMeetingsResponse)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/GetUpcomingMeetings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) GetPendingMeetings(ctx context.Context, in *GetPendingMeetingsRequest, opts ...grpc.CallOption) (*GetPendingMeetingsResponse, error) {
	out := new(GetPendingMeetingsResponse)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/GetPendingMeetings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) GetUpcomingMeetingBetweenUsers(ctx context.Context, in *GetUpcomingMeetingBetweenUsersRequest, opts ...grpc.CallOption) (*GetUpcomingMeetingBetweenUsersResponse, error) {
	out := new(GetUpcomingMeetingBetweenUsersResponse)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/GetUpcomingMeetingBetweenUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) FetchNumberOfNewConnections(ctx context.Context, in *FetchNumberOfNewConnectionsRequest, opts ...grpc.CallOption) (*FetchNumberOfNewConnectionsResponse, error) {
	out := new(FetchNumberOfNewConnectionsResponse)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/FetchNumberOfNewConnections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) FetchNumberOfTotalConnections(ctx context.Context, in *FetchNumberOfTotalConnectionsRequest, opts ...grpc.CallOption) (*FetchNumberOfTotalConnectionsResponse, error) {
	out := new(FetchNumberOfTotalConnectionsResponse)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/FetchNumberOfTotalConnections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) GetMeetingVibe(ctx context.Context, in *GetMeetingVibeRequest, opts ...grpc.CallOption) (*GetMeetingVibeResponse, error) {
	out := new(GetMeetingVibeResponse)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/GetMeetingVibe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) GetMeetingVibes(ctx context.Context, in *GetMeetingVibesRequest, opts ...grpc.CallOption) (*GetMeetingVibesResponse, error) {
	out := new(GetMeetingVibesResponse)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/GetMeetingVibes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) SendMeetingVibe(ctx context.Context, in *SendMeetingVibeRequest, opts ...grpc.CallOption) (*SendMeetingVibeResponse, error) {
	out := new(SendMeetingVibeResponse)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/SendMeetingVibe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) GetMeetingVibesSent(ctx context.Context, in *GetMeetingVibesSentRequest, opts ...grpc.CallOption) (*GetMeetingVibesSentResponse, error) {
	out := new(GetMeetingVibesSentResponse)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/GetMeetingVibesSent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) GetMeetingVibesReceived(ctx context.Context, in *GetMeetingVibesReceivedRequest, opts ...grpc.CallOption) (*GetMeetingVibesReceivedResponse, error) {
	out := new(GetMeetingVibesReceivedResponse)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/GetMeetingVibesReceived", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meetingServiceClient) GetMeetingVibesFromMeeting(ctx context.Context, in *GetMeetingVibesFromMeetingRequest, opts ...grpc.CallOption) (*GetMeetingVibesFromMeetingResponse, error) {
	out := new(GetMeetingVibesFromMeetingResponse)
	err := c.cc.Invoke(ctx, "/connections.meeting.MeetingService/GetMeetingVibesFromMeeting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MeetingServiceServer is the server API for MeetingService service.
type MeetingServiceServer interface {
	GetMeeting(context.Context, *GetMeetingRequest) (*GetMeetingResponse, error)
	GetMeetings(context.Context, *GetMeetingsRequest) (*GetMeetingsResponse, error)
	SendMeetingInvite(context.Context, *SendMeetingInviteRequest) (*SendMeetingInviteResponse, error)
	UpdateMeetingInvite(context.Context, *UpdateMeetingInviteRequest) (*empty.Empty, error)
	AcceptMeetingInvite(context.Context, *AcceptMeetingInviteRequest) (*empty.Empty, error)
	CancelMeetingInvite(context.Context, *CancelMeetingInviteRequest) (*empty.Empty, error)
	DeclineMeetingInvite(context.Context, *DeclineMeetingInviteRequest) (*empty.Empty, error)
	GetUpcomingMeetings(context.Context, *GetUpcomingMeetingsRequest) (*GetUpcomingMeetingsResponse, error)
	GetPendingMeetings(context.Context, *GetPendingMeetingsRequest) (*GetPendingMeetingsResponse, error)
	GetUpcomingMeetingBetweenUsers(context.Context, *GetUpcomingMeetingBetweenUsersRequest) (*GetUpcomingMeetingBetweenUsersResponse, error)
	FetchNumberOfNewConnections(context.Context, *FetchNumberOfNewConnectionsRequest) (*FetchNumberOfNewConnectionsResponse, error)
	FetchNumberOfTotalConnections(context.Context, *FetchNumberOfTotalConnectionsRequest) (*FetchNumberOfTotalConnectionsResponse, error)
	GetMeetingVibe(context.Context, *GetMeetingVibeRequest) (*GetMeetingVibeResponse, error)
	GetMeetingVibes(context.Context, *GetMeetingVibesRequest) (*GetMeetingVibesResponse, error)
	SendMeetingVibe(context.Context, *SendMeetingVibeRequest) (*SendMeetingVibeResponse, error)
	GetMeetingVibesSent(context.Context, *GetMeetingVibesSentRequest) (*GetMeetingVibesSentResponse, error)
	GetMeetingVibesReceived(context.Context, *GetMeetingVibesReceivedRequest) (*GetMeetingVibesReceivedResponse, error)
	GetMeetingVibesFromMeeting(context.Context, *GetMeetingVibesFromMeetingRequest) (*GetMeetingVibesFromMeetingResponse, error)
}

// UnimplementedMeetingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMeetingServiceServer struct {
}

func (*UnimplementedMeetingServiceServer) GetMeeting(context.Context, *GetMeetingRequest) (*GetMeetingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMeeting not implemented")
}
func (*UnimplementedMeetingServiceServer) GetMeetings(context.Context, *GetMeetingsRequest) (*GetMeetingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMeetings not implemented")
}
func (*UnimplementedMeetingServiceServer) SendMeetingInvite(context.Context, *SendMeetingInviteRequest) (*SendMeetingInviteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMeetingInvite not implemented")
}
func (*UnimplementedMeetingServiceServer) UpdateMeetingInvite(context.Context, *UpdateMeetingInviteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMeetingInvite not implemented")
}
func (*UnimplementedMeetingServiceServer) AcceptMeetingInvite(context.Context, *AcceptMeetingInviteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptMeetingInvite not implemented")
}
func (*UnimplementedMeetingServiceServer) CancelMeetingInvite(context.Context, *CancelMeetingInviteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelMeetingInvite not implemented")
}
func (*UnimplementedMeetingServiceServer) DeclineMeetingInvite(context.Context, *DeclineMeetingInviteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeclineMeetingInvite not implemented")
}
func (*UnimplementedMeetingServiceServer) GetUpcomingMeetings(context.Context, *GetUpcomingMeetingsRequest) (*GetUpcomingMeetingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUpcomingMeetings not implemented")
}
func (*UnimplementedMeetingServiceServer) GetPendingMeetings(context.Context, *GetPendingMeetingsRequest) (*GetPendingMeetingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPendingMeetings not implemented")
}
func (*UnimplementedMeetingServiceServer) GetUpcomingMeetingBetweenUsers(context.Context, *GetUpcomingMeetingBetweenUsersRequest) (*GetUpcomingMeetingBetweenUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUpcomingMeetingBetweenUsers not implemented")
}
func (*UnimplementedMeetingServiceServer) FetchNumberOfNewConnections(context.Context, *FetchNumberOfNewConnectionsRequest) (*FetchNumberOfNewConnectionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchNumberOfNewConnections not implemented")
}
func (*UnimplementedMeetingServiceServer) FetchNumberOfTotalConnections(context.Context, *FetchNumberOfTotalConnectionsRequest) (*FetchNumberOfTotalConnectionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchNumberOfTotalConnections not implemented")
}
func (*UnimplementedMeetingServiceServer) GetMeetingVibe(context.Context, *GetMeetingVibeRequest) (*GetMeetingVibeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMeetingVibe not implemented")
}
func (*UnimplementedMeetingServiceServer) GetMeetingVibes(context.Context, *GetMeetingVibesRequest) (*GetMeetingVibesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMeetingVibes not implemented")
}
func (*UnimplementedMeetingServiceServer) SendMeetingVibe(context.Context, *SendMeetingVibeRequest) (*SendMeetingVibeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMeetingVibe not implemented")
}
func (*UnimplementedMeetingServiceServer) GetMeetingVibesSent(context.Context, *GetMeetingVibesSentRequest) (*GetMeetingVibesSentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMeetingVibesSent not implemented")
}
func (*UnimplementedMeetingServiceServer) GetMeetingVibesReceived(context.Context, *GetMeetingVibesReceivedRequest) (*GetMeetingVibesReceivedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMeetingVibesReceived not implemented")
}
func (*UnimplementedMeetingServiceServer) GetMeetingVibesFromMeeting(context.Context, *GetMeetingVibesFromMeetingRequest) (*GetMeetingVibesFromMeetingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMeetingVibesFromMeeting not implemented")
}

func RegisterMeetingServiceServer(s *grpc.Server, srv MeetingServiceServer) {
	s.RegisterService(&_MeetingService_serviceDesc, srv)
}

func _MeetingService_GetMeeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMeetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).GetMeeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/GetMeeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).GetMeeting(ctx, req.(*GetMeetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_GetMeetings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMeetingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).GetMeetings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/GetMeetings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).GetMeetings(ctx, req.(*GetMeetingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_SendMeetingInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMeetingInviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).SendMeetingInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/SendMeetingInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).SendMeetingInvite(ctx, req.(*SendMeetingInviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_UpdateMeetingInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMeetingInviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).UpdateMeetingInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/UpdateMeetingInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).UpdateMeetingInvite(ctx, req.(*UpdateMeetingInviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_AcceptMeetingInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcceptMeetingInviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).AcceptMeetingInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/AcceptMeetingInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).AcceptMeetingInvite(ctx, req.(*AcceptMeetingInviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_CancelMeetingInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelMeetingInviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).CancelMeetingInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/CancelMeetingInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).CancelMeetingInvite(ctx, req.(*CancelMeetingInviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_DeclineMeetingInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeclineMeetingInviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).DeclineMeetingInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/DeclineMeetingInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).DeclineMeetingInvite(ctx, req.(*DeclineMeetingInviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_GetUpcomingMeetings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUpcomingMeetingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).GetUpcomingMeetings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/GetUpcomingMeetings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).GetUpcomingMeetings(ctx, req.(*GetUpcomingMeetingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_GetPendingMeetings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPendingMeetingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).GetPendingMeetings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/GetPendingMeetings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).GetPendingMeetings(ctx, req.(*GetPendingMeetingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_GetUpcomingMeetingBetweenUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUpcomingMeetingBetweenUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).GetUpcomingMeetingBetweenUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/GetUpcomingMeetingBetweenUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).GetUpcomingMeetingBetweenUsers(ctx, req.(*GetUpcomingMeetingBetweenUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_FetchNumberOfNewConnections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchNumberOfNewConnectionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).FetchNumberOfNewConnections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/FetchNumberOfNewConnections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).FetchNumberOfNewConnections(ctx, req.(*FetchNumberOfNewConnectionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_FetchNumberOfTotalConnections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchNumberOfTotalConnectionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).FetchNumberOfTotalConnections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/FetchNumberOfTotalConnections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).FetchNumberOfTotalConnections(ctx, req.(*FetchNumberOfTotalConnectionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_GetMeetingVibe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMeetingVibeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).GetMeetingVibe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/GetMeetingVibe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).GetMeetingVibe(ctx, req.(*GetMeetingVibeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_GetMeetingVibes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMeetingVibesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).GetMeetingVibes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/GetMeetingVibes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).GetMeetingVibes(ctx, req.(*GetMeetingVibesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_SendMeetingVibe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMeetingVibeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).SendMeetingVibe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/SendMeetingVibe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).SendMeetingVibe(ctx, req.(*SendMeetingVibeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_GetMeetingVibesSent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMeetingVibesSentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).GetMeetingVibesSent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/GetMeetingVibesSent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).GetMeetingVibesSent(ctx, req.(*GetMeetingVibesSentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_GetMeetingVibesReceived_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMeetingVibesReceivedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).GetMeetingVibesReceived(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/GetMeetingVibesReceived",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).GetMeetingVibesReceived(ctx, req.(*GetMeetingVibesReceivedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeetingService_GetMeetingVibesFromMeeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMeetingVibesFromMeetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeetingServiceServer).GetMeetingVibesFromMeeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.meeting.MeetingService/GetMeetingVibesFromMeeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeetingServiceServer).GetMeetingVibesFromMeeting(ctx, req.(*GetMeetingVibesFromMeetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MeetingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "connections.meeting.MeetingService",
	HandlerType: (*MeetingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMeeting",
			Handler:    _MeetingService_GetMeeting_Handler,
		},
		{
			MethodName: "GetMeetings",
			Handler:    _MeetingService_GetMeetings_Handler,
		},
		{
			MethodName: "SendMeetingInvite",
			Handler:    _MeetingService_SendMeetingInvite_Handler,
		},
		{
			MethodName: "UpdateMeetingInvite",
			Handler:    _MeetingService_UpdateMeetingInvite_Handler,
		},
		{
			MethodName: "AcceptMeetingInvite",
			Handler:    _MeetingService_AcceptMeetingInvite_Handler,
		},
		{
			MethodName: "CancelMeetingInvite",
			Handler:    _MeetingService_CancelMeetingInvite_Handler,
		},
		{
			MethodName: "DeclineMeetingInvite",
			Handler:    _MeetingService_DeclineMeetingInvite_Handler,
		},
		{
			MethodName: "GetUpcomingMeetings",
			Handler:    _MeetingService_GetUpcomingMeetings_Handler,
		},
		{
			MethodName: "GetPendingMeetings",
			Handler:    _MeetingService_GetPendingMeetings_Handler,
		},
		{
			MethodName: "GetUpcomingMeetingBetweenUsers",
			Handler:    _MeetingService_GetUpcomingMeetingBetweenUsers_Handler,
		},
		{
			MethodName: "FetchNumberOfNewConnections",
			Handler:    _MeetingService_FetchNumberOfNewConnections_Handler,
		},
		{
			MethodName: "FetchNumberOfTotalConnections",
			Handler:    _MeetingService_FetchNumberOfTotalConnections_Handler,
		},
		{
			MethodName: "GetMeetingVibe",
			Handler:    _MeetingService_GetMeetingVibe_Handler,
		},
		{
			MethodName: "GetMeetingVibes",
			Handler:    _MeetingService_GetMeetingVibes_Handler,
		},
		{
			MethodName: "SendMeetingVibe",
			Handler:    _MeetingService_SendMeetingVibe_Handler,
		},
		{
			MethodName: "GetMeetingVibesSent",
			Handler:    _MeetingService_GetMeetingVibesSent_Handler,
		},
		{
			MethodName: "GetMeetingVibesReceived",
			Handler:    _MeetingService_GetMeetingVibesReceived_Handler,
		},
		{
			MethodName: "GetMeetingVibesFromMeeting",
			Handler:    _MeetingService_GetMeetingVibesFromMeeting_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/protobuf-spec/connection_meeting_v1.proto",
}
