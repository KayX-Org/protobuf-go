// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: api/protobuf-spec/connection_frequency_v1.proto

package frequencypb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AverageFrequencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Freq float32 `protobuf:"fixed32,1,opt,name=freq,proto3" json:"freq,omitempty"`
}

func (x *AverageFrequencyResponse) Reset() {
	*x = AverageFrequencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_frequency_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AverageFrequencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AverageFrequencyResponse) ProtoMessage() {}

func (x *AverageFrequencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_frequency_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AverageFrequencyResponse.ProtoReflect.Descriptor instead.
func (*AverageFrequencyResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_frequency_v1_proto_rawDescGZIP(), []int{0}
}

func (x *AverageFrequencyResponse) GetFreq() float32 {
	if x != nil {
		return x.Freq
	}
	return 0
}

type UserFrequencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserFrequencyRequest) Reset() {
	*x = UserFrequencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_frequency_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFrequencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFrequencyRequest) ProtoMessage() {}

func (x *UserFrequencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_frequency_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFrequencyRequest.ProtoReflect.Descriptor instead.
func (*UserFrequencyRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_frequency_v1_proto_rawDescGZIP(), []int{1}
}

func (x *UserFrequencyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserFrequencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Freq       float32 `protobuf:"fixed32,1,opt,name=freq,proto3" json:"freq,omitempty"`
	Percentage int32   `protobuf:"varint,2,opt,name=percentage,proto3" json:"percentage,omitempty"`
	Text       string  `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Average    float32 `protobuf:"fixed32,4,opt,name=average,proto3" json:"average,omitempty"`
}

func (x *UserFrequencyResponse) Reset() {
	*x = UserFrequencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_frequency_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFrequencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFrequencyResponse) ProtoMessage() {}

func (x *UserFrequencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_frequency_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFrequencyResponse.ProtoReflect.Descriptor instead.
func (*UserFrequencyResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_frequency_v1_proto_rawDescGZIP(), []int{2}
}

func (x *UserFrequencyResponse) GetFreq() float32 {
	if x != nil {
		return x.Freq
	}
	return 0
}

func (x *UserFrequencyResponse) GetPercentage() int32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *UserFrequencyResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *UserFrequencyResponse) GetAverage() float32 {
	if x != nil {
		return x.Average
	}
	return 0
}

var File_api_protobuf_spec_connection_frequency_v1_proto protoreflect.FileDescriptor

var file_api_protobuf_spec_connection_frequency_v1_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x73,
	0x70, 0x65, 0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x15, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x18, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x66, 0x72, 0x65, 0x71, 0x22, 0x2f, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x66,
	0x72, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x32, 0xdf, 0x01, 0x0a, 0x10, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x10, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x2f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x41, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x25, 0x5a, 0x23, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x70, 0x62, 0x3b, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_protobuf_spec_connection_frequency_v1_proto_rawDescOnce sync.Once
	file_api_protobuf_spec_connection_frequency_v1_proto_rawDescData = file_api_protobuf_spec_connection_frequency_v1_proto_rawDesc
)

func file_api_protobuf_spec_connection_frequency_v1_proto_rawDescGZIP() []byte {
	file_api_protobuf_spec_connection_frequency_v1_proto_rawDescOnce.Do(func() {
		file_api_protobuf_spec_connection_frequency_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_protobuf_spec_connection_frequency_v1_proto_rawDescData)
	})
	return file_api_protobuf_spec_connection_frequency_v1_proto_rawDescData
}

var file_api_protobuf_spec_connection_frequency_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_protobuf_spec_connection_frequency_v1_proto_goTypes = []interface{}{
	(*AverageFrequencyResponse)(nil), // 0: connections.frequency.AverageFrequencyResponse
	(*UserFrequencyRequest)(nil),     // 1: connections.frequency.UserFrequencyRequest
	(*UserFrequencyResponse)(nil),    // 2: connections.frequency.UserFrequencyResponse
	(*empty.Empty)(nil),              // 3: google.protobuf.Empty
}
var file_api_protobuf_spec_connection_frequency_v1_proto_depIdxs = []int32{
	3, // 0: connections.frequency.FrequencyService.AverageFrequency:input_type -> google.protobuf.Empty
	1, // 1: connections.frequency.FrequencyService.UserFrequency:input_type -> connections.frequency.UserFrequencyRequest
	0, // 2: connections.frequency.FrequencyService.AverageFrequency:output_type -> connections.frequency.AverageFrequencyResponse
	2, // 3: connections.frequency.FrequencyService.UserFrequency:output_type -> connections.frequency.UserFrequencyResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_protobuf_spec_connection_frequency_v1_proto_init() }
func file_api_protobuf_spec_connection_frequency_v1_proto_init() {
	if File_api_protobuf_spec_connection_frequency_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_protobuf_spec_connection_frequency_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AverageFrequencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_frequency_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFrequencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_frequency_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFrequencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_protobuf_spec_connection_frequency_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_protobuf_spec_connection_frequency_v1_proto_goTypes,
		DependencyIndexes: file_api_protobuf_spec_connection_frequency_v1_proto_depIdxs,
		MessageInfos:      file_api_protobuf_spec_connection_frequency_v1_proto_msgTypes,
	}.Build()
	File_api_protobuf_spec_connection_frequency_v1_proto = out.File
	file_api_protobuf_spec_connection_frequency_v1_proto_rawDesc = nil
	file_api_protobuf_spec_connection_frequency_v1_proto_goTypes = nil
	file_api_protobuf_spec_connection_frequency_v1_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FrequencyServiceClient is the client API for FrequencyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FrequencyServiceClient interface {
	AverageFrequency(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AverageFrequencyResponse, error)
	UserFrequency(ctx context.Context, in *UserFrequencyRequest, opts ...grpc.CallOption) (*UserFrequencyResponse, error)
}

type frequencyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFrequencyServiceClient(cc grpc.ClientConnInterface) FrequencyServiceClient {
	return &frequencyServiceClient{cc}
}

func (c *frequencyServiceClient) AverageFrequency(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AverageFrequencyResponse, error) {
	out := new(AverageFrequencyResponse)
	err := c.cc.Invoke(ctx, "/connections.frequency.FrequencyService/AverageFrequency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frequencyServiceClient) UserFrequency(ctx context.Context, in *UserFrequencyRequest, opts ...grpc.CallOption) (*UserFrequencyResponse, error) {
	out := new(UserFrequencyResponse)
	err := c.cc.Invoke(ctx, "/connections.frequency.FrequencyService/UserFrequency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FrequencyServiceServer is the server API for FrequencyService service.
type FrequencyServiceServer interface {
	AverageFrequency(context.Context, *empty.Empty) (*AverageFrequencyResponse, error)
	UserFrequency(context.Context, *UserFrequencyRequest) (*UserFrequencyResponse, error)
}

// UnimplementedFrequencyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFrequencyServiceServer struct {
}

func (*UnimplementedFrequencyServiceServer) AverageFrequency(context.Context, *empty.Empty) (*AverageFrequencyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AverageFrequency not implemented")
}
func (*UnimplementedFrequencyServiceServer) UserFrequency(context.Context, *UserFrequencyRequest) (*UserFrequencyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserFrequency not implemented")
}

func RegisterFrequencyServiceServer(s *grpc.Server, srv FrequencyServiceServer) {
	s.RegisterService(&_FrequencyService_serviceDesc, srv)
}

func _FrequencyService_AverageFrequency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrequencyServiceServer).AverageFrequency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.frequency.FrequencyService/AverageFrequency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrequencyServiceServer).AverageFrequency(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrequencyService_UserFrequency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFrequencyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrequencyServiceServer).UserFrequency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.frequency.FrequencyService/UserFrequency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrequencyServiceServer).UserFrequency(ctx, req.(*UserFrequencyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FrequencyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "connections.frequency.FrequencyService",
	HandlerType: (*FrequencyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AverageFrequency",
			Handler:    _FrequencyService_AverageFrequency_Handler,
		},
		{
			MethodName: "UserFrequency",
			Handler:    _FrequencyService_UserFrequency_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/protobuf-spec/connection_frequency_v1.proto",
}
