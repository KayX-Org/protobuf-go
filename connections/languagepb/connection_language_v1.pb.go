// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: api/protobuf-spec/connection_language_v1.proto

package languagepb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Language struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	EnglishName string `protobuf:"bytes,2,opt,name=english_name,json=englishName,proto3" json:"english_name,omitempty"`
	NativeName  string `protobuf:"bytes,3,opt,name=native_name,json=nativeName,proto3" json:"native_name,omitempty"`
}

func (x *Language) Reset() {
	*x = Language{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_language_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Language) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Language) ProtoMessage() {}

func (x *Language) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_language_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Language.ProtoReflect.Descriptor instead.
func (*Language) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_language_v1_proto_rawDescGZIP(), []int{0}
}

func (x *Language) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Language) GetEnglishName() string {
	if x != nil {
		return x.EnglishName
	}
	return ""
}

func (x *Language) GetNativeName() string {
	if x != nil {
		return x.NativeName
	}
	return ""
}

type GetAllLanguagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Languages []*Language `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
}

func (x *GetAllLanguagesResponse) Reset() {
	*x = GetAllLanguagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_language_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllLanguagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllLanguagesResponse) ProtoMessage() {}

func (x *GetAllLanguagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_language_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllLanguagesResponse.ProtoReflect.Descriptor instead.
func (*GetAllLanguagesResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_language_v1_proto_rawDescGZIP(), []int{1}
}

func (x *GetAllLanguagesResponse) GetLanguages() []*Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

type GetUserLanguagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserLanguagesRequest) Reset() {
	*x = GetUserLanguagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_language_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserLanguagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLanguagesRequest) ProtoMessage() {}

func (x *GetUserLanguagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_language_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLanguagesRequest.ProtoReflect.Descriptor instead.
func (*GetUserLanguagesRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_language_v1_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserLanguagesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserLanguagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Languages []*Language `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
}

func (x *GetUserLanguagesResponse) Reset() {
	*x = GetUserLanguagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_language_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserLanguagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLanguagesResponse) ProtoMessage() {}

func (x *GetUserLanguagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_language_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLanguagesResponse.ProtoReflect.Descriptor instead.
func (*GetUserLanguagesResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_language_v1_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserLanguagesResponse) GetLanguages() []*Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

type GetSharedLanguagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserToId   string `protobuf:"bytes,1,opt,name=user_to_id,json=userToId,proto3" json:"user_to_id,omitempty"`
	UserFromId string `protobuf:"bytes,2,opt,name=user_from_id,json=userFromId,proto3" json:"user_from_id,omitempty"`
}

func (x *GetSharedLanguagesRequest) Reset() {
	*x = GetSharedLanguagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_language_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharedLanguagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharedLanguagesRequest) ProtoMessage() {}

func (x *GetSharedLanguagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_language_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharedLanguagesRequest.ProtoReflect.Descriptor instead.
func (*GetSharedLanguagesRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_language_v1_proto_rawDescGZIP(), []int{4}
}

func (x *GetSharedLanguagesRequest) GetUserToId() string {
	if x != nil {
		return x.UserToId
	}
	return ""
}

func (x *GetSharedLanguagesRequest) GetUserFromId() string {
	if x != nil {
		return x.UserFromId
	}
	return ""
}

type GetSharedLanguagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Languages []*Language `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
}

func (x *GetSharedLanguagesResponse) Reset() {
	*x = GetSharedLanguagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_language_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharedLanguagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharedLanguagesResponse) ProtoMessage() {}

func (x *GetSharedLanguagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_language_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharedLanguagesResponse.ProtoReflect.Descriptor instead.
func (*GetSharedLanguagesResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_language_v1_proto_rawDescGZIP(), []int{5}
}

func (x *GetSharedLanguagesResponse) GetLanguages() []*Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

type UpdateLanguageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Codes  []string `protobuf:"bytes,2,rep,name=codes,proto3" json:"codes,omitempty"`
}

func (x *UpdateLanguageRequest) Reset() {
	*x = UpdateLanguageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_language_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLanguageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLanguageRequest) ProtoMessage() {}

func (x *UpdateLanguageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_language_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLanguageRequest.ProtoReflect.Descriptor instead.
func (*UpdateLanguageRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_language_v1_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateLanguageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateLanguageRequest) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

var File_api_protobuf_spec_connection_language_v1_proto protoreflect.FileDescriptor

var file_api_protobuf_spec_connection_language_v1_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x73,
	0x70, 0x65, 0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x67, 0x6c, 0x69,
	0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x32, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x22, 0x5b,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x09, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x32,
	0xb6, 0x03, 0x0a, 0x0f, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2d,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x73, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2f, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x57, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x23, 0x5a, 0x21, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x70, 0x62, 0x3b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_protobuf_spec_connection_language_v1_proto_rawDescOnce sync.Once
	file_api_protobuf_spec_connection_language_v1_proto_rawDescData = file_api_protobuf_spec_connection_language_v1_proto_rawDesc
)

func file_api_protobuf_spec_connection_language_v1_proto_rawDescGZIP() []byte {
	file_api_protobuf_spec_connection_language_v1_proto_rawDescOnce.Do(func() {
		file_api_protobuf_spec_connection_language_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_protobuf_spec_connection_language_v1_proto_rawDescData)
	})
	return file_api_protobuf_spec_connection_language_v1_proto_rawDescData
}

var file_api_protobuf_spec_connection_language_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_protobuf_spec_connection_language_v1_proto_goTypes = []interface{}{
	(*Language)(nil),                   // 0: connections.language.Language
	(*GetAllLanguagesResponse)(nil),    // 1: connections.language.GetAllLanguagesResponse
	(*GetUserLanguagesRequest)(nil),    // 2: connections.language.GetUserLanguagesRequest
	(*GetUserLanguagesResponse)(nil),   // 3: connections.language.GetUserLanguagesResponse
	(*GetSharedLanguagesRequest)(nil),  // 4: connections.language.GetSharedLanguagesRequest
	(*GetSharedLanguagesResponse)(nil), // 5: connections.language.GetSharedLanguagesResponse
	(*UpdateLanguageRequest)(nil),      // 6: connections.language.UpdateLanguageRequest
	(*empty.Empty)(nil),                // 7: google.protobuf.Empty
}
var file_api_protobuf_spec_connection_language_v1_proto_depIdxs = []int32{
	0, // 0: connections.language.GetAllLanguagesResponse.languages:type_name -> connections.language.Language
	0, // 1: connections.language.GetUserLanguagesResponse.languages:type_name -> connections.language.Language
	0, // 2: connections.language.GetSharedLanguagesResponse.languages:type_name -> connections.language.Language
	7, // 3: connections.language.LanguageService.GetAllLanguages:input_type -> google.protobuf.Empty
	2, // 4: connections.language.LanguageService.GetUserLanguages:input_type -> connections.language.GetUserLanguagesRequest
	4, // 5: connections.language.LanguageService.GetSharedLanguages:input_type -> connections.language.GetSharedLanguagesRequest
	6, // 6: connections.language.LanguageService.UpdateLanguage:input_type -> connections.language.UpdateLanguageRequest
	1, // 7: connections.language.LanguageService.GetAllLanguages:output_type -> connections.language.GetAllLanguagesResponse
	3, // 8: connections.language.LanguageService.GetUserLanguages:output_type -> connections.language.GetUserLanguagesResponse
	5, // 9: connections.language.LanguageService.GetSharedLanguages:output_type -> connections.language.GetSharedLanguagesResponse
	7, // 10: connections.language.LanguageService.UpdateLanguage:output_type -> google.protobuf.Empty
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_protobuf_spec_connection_language_v1_proto_init() }
func file_api_protobuf_spec_connection_language_v1_proto_init() {
	if File_api_protobuf_spec_connection_language_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_protobuf_spec_connection_language_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Language); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_language_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllLanguagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_language_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserLanguagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_language_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserLanguagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_language_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharedLanguagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_language_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharedLanguagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_language_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLanguageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_protobuf_spec_connection_language_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_protobuf_spec_connection_language_v1_proto_goTypes,
		DependencyIndexes: file_api_protobuf_spec_connection_language_v1_proto_depIdxs,
		MessageInfos:      file_api_protobuf_spec_connection_language_v1_proto_msgTypes,
	}.Build()
	File_api_protobuf_spec_connection_language_v1_proto = out.File
	file_api_protobuf_spec_connection_language_v1_proto_rawDesc = nil
	file_api_protobuf_spec_connection_language_v1_proto_goTypes = nil
	file_api_protobuf_spec_connection_language_v1_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LanguageServiceClient is the client API for LanguageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LanguageServiceClient interface {
	GetAllLanguages(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetAllLanguagesResponse, error)
	GetUserLanguages(ctx context.Context, in *GetUserLanguagesRequest, opts ...grpc.CallOption) (*GetUserLanguagesResponse, error)
	GetSharedLanguages(ctx context.Context, in *GetSharedLanguagesRequest, opts ...grpc.CallOption) (*GetSharedLanguagesResponse, error)
	UpdateLanguage(ctx context.Context, in *UpdateLanguageRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type languageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLanguageServiceClient(cc grpc.ClientConnInterface) LanguageServiceClient {
	return &languageServiceClient{cc}
}

func (c *languageServiceClient) GetAllLanguages(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetAllLanguagesResponse, error) {
	out := new(GetAllLanguagesResponse)
	err := c.cc.Invoke(ctx, "/connections.language.LanguageService/GetAllLanguages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *languageServiceClient) GetUserLanguages(ctx context.Context, in *GetUserLanguagesRequest, opts ...grpc.CallOption) (*GetUserLanguagesResponse, error) {
	out := new(GetUserLanguagesResponse)
	err := c.cc.Invoke(ctx, "/connections.language.LanguageService/GetUserLanguages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *languageServiceClient) GetSharedLanguages(ctx context.Context, in *GetSharedLanguagesRequest, opts ...grpc.CallOption) (*GetSharedLanguagesResponse, error) {
	out := new(GetSharedLanguagesResponse)
	err := c.cc.Invoke(ctx, "/connections.language.LanguageService/GetSharedLanguages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *languageServiceClient) UpdateLanguage(ctx context.Context, in *UpdateLanguageRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/connections.language.LanguageService/UpdateLanguage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LanguageServiceServer is the server API for LanguageService service.
type LanguageServiceServer interface {
	GetAllLanguages(context.Context, *empty.Empty) (*GetAllLanguagesResponse, error)
	GetUserLanguages(context.Context, *GetUserLanguagesRequest) (*GetUserLanguagesResponse, error)
	GetSharedLanguages(context.Context, *GetSharedLanguagesRequest) (*GetSharedLanguagesResponse, error)
	UpdateLanguage(context.Context, *UpdateLanguageRequest) (*empty.Empty, error)
}

// UnimplementedLanguageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLanguageServiceServer struct {
}

func (*UnimplementedLanguageServiceServer) GetAllLanguages(context.Context, *empty.Empty) (*GetAllLanguagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllLanguages not implemented")
}
func (*UnimplementedLanguageServiceServer) GetUserLanguages(context.Context, *GetUserLanguagesRequest) (*GetUserLanguagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserLanguages not implemented")
}
func (*UnimplementedLanguageServiceServer) GetSharedLanguages(context.Context, *GetSharedLanguagesRequest) (*GetSharedLanguagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSharedLanguages not implemented")
}
func (*UnimplementedLanguageServiceServer) UpdateLanguage(context.Context, *UpdateLanguageRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLanguage not implemented")
}

func RegisterLanguageServiceServer(s *grpc.Server, srv LanguageServiceServer) {
	s.RegisterService(&_LanguageService_serviceDesc, srv)
}

func _LanguageService_GetAllLanguages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LanguageServiceServer).GetAllLanguages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.language.LanguageService/GetAllLanguages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LanguageServiceServer).GetAllLanguages(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _LanguageService_GetUserLanguages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserLanguagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LanguageServiceServer).GetUserLanguages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.language.LanguageService/GetUserLanguages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LanguageServiceServer).GetUserLanguages(ctx, req.(*GetUserLanguagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LanguageService_GetSharedLanguages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSharedLanguagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LanguageServiceServer).GetSharedLanguages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.language.LanguageService/GetSharedLanguages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LanguageServiceServer).GetSharedLanguages(ctx, req.(*GetSharedLanguagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LanguageService_UpdateLanguage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLanguageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LanguageServiceServer).UpdateLanguage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.language.LanguageService/UpdateLanguage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LanguageServiceServer).UpdateLanguage(ctx, req.(*UpdateLanguageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LanguageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "connections.language.LanguageService",
	HandlerType: (*LanguageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllLanguages",
			Handler:    _LanguageService_GetAllLanguages_Handler,
		},
		{
			MethodName: "GetUserLanguages",
			Handler:    _LanguageService_GetUserLanguages_Handler,
		},
		{
			MethodName: "GetSharedLanguages",
			Handler:    _LanguageService_GetSharedLanguages_Handler,
		},
		{
			MethodName: "UpdateLanguage",
			Handler:    _LanguageService_UpdateLanguage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/protobuf-spec/connection_language_v1.proto",
}
