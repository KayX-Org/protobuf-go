// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: api/protobuf-spec/connection_chat_v1.proto

package chatpb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MessageType int32

const (
	MessageType_TEXT MessageType = 0
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "TEXT",
	}
	MessageType_value = map[string]int32{
		"TEXT": 0,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_protobuf_spec_connection_chat_v1_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_api_protobuf_spec_connection_chat_v1_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{0}
}

type MessageConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId  string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Seen       bool   `protobuf:"varint,2,opt,name=seen,proto3" json:"seen,omitempty"`
	SentByUser bool   `protobuf:"varint,3,opt,name=sent_by_user,json=sentByUser,proto3" json:"sent_by_user,omitempty"`
}

func (x *MessageConnection) Reset() {
	*x = MessageConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageConnection) ProtoMessage() {}

func (x *MessageConnection) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageConnection.ProtoReflect.Descriptor instead.
func (*MessageConnection) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{0}
}

func (x *MessageConnection) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageConnection) GetSeen() bool {
	if x != nil {
		return x.Seen
	}
	return false
}

func (x *MessageConnection) GetSentByUser() bool {
	if x != nil {
		return x.SentByUser
	}
	return false
}

type RoomConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       string               `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	CreatedBy    string               `protobuf:"bytes,2,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	LastActivity *timestamp.Timestamp `protobuf:"bytes,3,opt,name=lastActivity,proto3" json:"lastActivity,omitempty"`
}

func (x *RoomConnection) Reset() {
	*x = RoomConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomConnection) ProtoMessage() {}

func (x *RoomConnection) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomConnection.ProtoReflect.Descriptor instead.
func (*RoomConnection) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{1}
}

func (x *RoomConnection) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomConnection) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *RoomConnection) GetLastActivity() *timestamp.Timestamp {
	if x != nil {
		return x.LastActivity
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoomId     string               `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	FromUserId string               `protobuf:"bytes,3,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	Content    string               `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Type       MessageType          `protobuf:"varint,5,opt,name=type,proto3,enum=connections.chat.MessageType" json:"type,omitempty"`
	SentAt     *timestamp.Timestamp `protobuf:"bytes,6,opt,name=sentAt,proto3" json:"sentAt,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{2}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *Message) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_TEXT
}

func (x *Message) GetSentAt() *timestamp.Timestamp {
	if x != nil {
		return x.SentAt
	}
	return nil
}

type SendChatMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserId  string      `protobuf:"bytes,1,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToUserId    string      `protobuf:"bytes,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
	Content     string      `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	MessageType MessageType `protobuf:"varint,4,opt,name=message_type,json=messageType,proto3,enum=connections.chat.MessageType" json:"message_type,omitempty"`
}

func (x *SendChatMessageRequest) Reset() {
	*x = SendChatMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatMessageRequest) ProtoMessage() {}

func (x *SendChatMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatMessageRequest.ProtoReflect.Descriptor instead.
func (*SendChatMessageRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{3}
}

func (x *SendChatMessageRequest) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *SendChatMessageRequest) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

func (x *SendChatMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendChatMessageRequest) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_TEXT
}

type SendChatMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendChatMessageResponse) Reset() {
	*x = SendChatMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatMessageResponse) ProtoMessage() {}

func (x *SendChatMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatMessageResponse.ProtoReflect.Descriptor instead.
func (*SendChatMessageResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{4}
}

func (x *SendChatMessageResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SendSupportChatMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendSupportChatMessageResponse) Reset() {
	*x = SendSupportChatMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSupportChatMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSupportChatMessageResponse) ProtoMessage() {}

func (x *SendSupportChatMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSupportChatMessageResponse.ProtoReflect.Descriptor instead.
func (*SendSupportChatMessageResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{5}
}

func (x *SendSupportChatMessageResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SendSupportChatMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserId  string      `protobuf:"bytes,1,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	Content     string      `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	MessageType MessageType `protobuf:"varint,4,opt,name=message_type,json=messageType,proto3,enum=connections.chat.MessageType" json:"message_type,omitempty"`
}

func (x *SendSupportChatMessageRequest) Reset() {
	*x = SendSupportChatMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSupportChatMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSupportChatMessageRequest) ProtoMessage() {}

func (x *SendSupportChatMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSupportChatMessageRequest.ProtoReflect.Descriptor instead.
func (*SendSupportChatMessageRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{6}
}

func (x *SendSupportChatMessageRequest) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *SendSupportChatMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendSupportChatMessageRequest) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_TEXT
}

type FetchSupportChatMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *FetchSupportChatMessagesRequest) Reset() {
	*x = FetchSupportChatMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchSupportChatMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchSupportChatMessagesRequest) ProtoMessage() {}

func (x *FetchSupportChatMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchSupportChatMessagesRequest.ProtoReflect.Descriptor instead.
func (*FetchSupportChatMessagesRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{7}
}

func (x *FetchSupportChatMessagesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FetchSupportChatMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connection []*MessageConnection `protobuf:"bytes,1,rep,name=connection,proto3" json:"connection,omitempty"`
}

func (x *FetchSupportChatMessagesResponse) Reset() {
	*x = FetchSupportChatMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchSupportChatMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchSupportChatMessagesResponse) ProtoMessage() {}

func (x *FetchSupportChatMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchSupportChatMessagesResponse.ProtoReflect.Descriptor instead.
func (*FetchSupportChatMessagesResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{8}
}

func (x *FetchSupportChatMessagesResponse) GetConnection() []*MessageConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type FetchChatMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterestedUserId string `protobuf:"bytes,1,opt,name=interested_user_id,json=interestedUserId,proto3" json:"interested_user_id,omitempty"`
	WithUserId       string `protobuf:"bytes,2,opt,name=with_user_id,json=withUserId,proto3" json:"with_user_id,omitempty"`
}

func (x *FetchChatMessagesRequest) Reset() {
	*x = FetchChatMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchChatMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchChatMessagesRequest) ProtoMessage() {}

func (x *FetchChatMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchChatMessagesRequest.ProtoReflect.Descriptor instead.
func (*FetchChatMessagesRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{9}
}

func (x *FetchChatMessagesRequest) GetInterestedUserId() string {
	if x != nil {
		return x.InterestedUserId
	}
	return ""
}

func (x *FetchChatMessagesRequest) GetWithUserId() string {
	if x != nil {
		return x.WithUserId
	}
	return ""
}

type FetchChatMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connection []*MessageConnection `protobuf:"bytes,1,rep,name=connection,proto3" json:"connection,omitempty"`
}

func (x *FetchChatMessagesResponse) Reset() {
	*x = FetchChatMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchChatMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchChatMessagesResponse) ProtoMessage() {}

func (x *FetchChatMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchChatMessagesResponse.ProtoReflect.Descriptor instead.
func (*FetchChatMessagesResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{10}
}

func (x *FetchChatMessagesResponse) GetConnection() []*MessageConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type GetMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetMessagesRequest) Reset() {
	*x = GetMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesRequest) ProtoMessage() {}

func (x *GetMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetMessagesRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{11}
}

func (x *GetMessagesRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []*Message `protobuf:"bytes,1,rep,name=message,proto3" json:"message,omitempty"`
}

func (x *GetMessagesResponse) Reset() {
	*x = GetMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesResponse) ProtoMessage() {}

func (x *GetMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetMessagesResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{12}
}

func (x *GetMessagesResponse) GetMessage() []*Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type GetSupportRoomsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms []*RoomConnection `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *GetSupportRoomsResponse) Reset() {
	*x = GetSupportRoomsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSupportRoomsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportRoomsResponse) ProtoMessage() {}

func (x *GetSupportRoomsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportRoomsResponse.ProtoReflect.Descriptor instead.
func (*GetSupportRoomsResponse) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{13}
}

func (x *GetSupportRoomsResponse) GetRooms() []*RoomConnection {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type MarkMessagesAsSeenUpToDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	RoomId string               `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId string               `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *MarkMessagesAsSeenUpToDateRequest) Reset() {
	*x = MarkMessagesAsSeenUpToDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkMessagesAsSeenUpToDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkMessagesAsSeenUpToDateRequest) ProtoMessage() {}

func (x *MarkMessagesAsSeenUpToDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkMessagesAsSeenUpToDateRequest.ProtoReflect.Descriptor instead.
func (*MarkMessagesAsSeenUpToDateRequest) Descriptor() ([]byte, []int) {
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP(), []int{14}
}

func (x *MarkMessagesAsSeenUpToDateRequest) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *MarkMessagesAsSeenUpToDateRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *MarkMessagesAsSeenUpToDateRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_api_protobuf_spec_connection_chat_v1_proto protoreflect.FileDescriptor

var file_api_protobuf_spec_connection_chat_v1_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x73,
	0x70, 0x65, 0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x11,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x73, 0x65, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x79, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x74,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x22, 0xd5, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72,
	0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x16, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x40,
	0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x29, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x1e, 0x53,
	0x65, 0x6e, 0x64, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9d, 0x01,
	0x0a, 0x1d, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x0a,
	0x1f, 0x46, 0x65, 0x74, 0x63, 0x68, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x20, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x6a, 0x0a, 0x18, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c,
	0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x60,
	0x0a, 0x19, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x26, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x4a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x51, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x21, 0x4d, 0x61, 0x72, 0x6b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x41, 0x73, 0x53, 0x65, 0x65, 0x6e, 0x55, 0x70,
	0x54, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x2a,
	0x17, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x00, 0x32, 0x8f, 0x06, 0x0a, 0x0b, 0x43, 0x68, 0x61,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x2e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7d, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6e, 0x0a, 0x11, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x83, 0x01, 0x0a, 0x18, 0x46, 0x65, 0x74, 0x63, 0x68, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x31,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x1a, 0x4d, 0x61, 0x72, 0x6b, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x41, 0x73, 0x53, 0x65, 0x65, 0x6e, 0x55, 0x70, 0x54,
	0x6f, 0x44, 0x61, 0x74, 0x65, 0x12, 0x33, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x41, 0x73, 0x53, 0x65, 0x65, 0x6e, 0x55, 0x70, 0x54, 0x6f, 0x44,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x29, 0x2e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1b, 0x5a, 0x19, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x70, 0x62,
	0x3b, 0x63, 0x68, 0x61, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_protobuf_spec_connection_chat_v1_proto_rawDescOnce sync.Once
	file_api_protobuf_spec_connection_chat_v1_proto_rawDescData = file_api_protobuf_spec_connection_chat_v1_proto_rawDesc
)

func file_api_protobuf_spec_connection_chat_v1_proto_rawDescGZIP() []byte {
	file_api_protobuf_spec_connection_chat_v1_proto_rawDescOnce.Do(func() {
		file_api_protobuf_spec_connection_chat_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_protobuf_spec_connection_chat_v1_proto_rawDescData)
	})
	return file_api_protobuf_spec_connection_chat_v1_proto_rawDescData
}

var file_api_protobuf_spec_connection_chat_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_protobuf_spec_connection_chat_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_protobuf_spec_connection_chat_v1_proto_goTypes = []interface{}{
	(MessageType)(0),                          // 0: connections.chat.MessageType
	(*MessageConnection)(nil),                 // 1: connections.chat.MessageConnection
	(*RoomConnection)(nil),                    // 2: connections.chat.RoomConnection
	(*Message)(nil),                           // 3: connections.chat.Message
	(*SendChatMessageRequest)(nil),            // 4: connections.chat.SendChatMessageRequest
	(*SendChatMessageResponse)(nil),           // 5: connections.chat.SendChatMessageResponse
	(*SendSupportChatMessageResponse)(nil),    // 6: connections.chat.SendSupportChatMessageResponse
	(*SendSupportChatMessageRequest)(nil),     // 7: connections.chat.SendSupportChatMessageRequest
	(*FetchSupportChatMessagesRequest)(nil),   // 8: connections.chat.FetchSupportChatMessagesRequest
	(*FetchSupportChatMessagesResponse)(nil),  // 9: connections.chat.FetchSupportChatMessagesResponse
	(*FetchChatMessagesRequest)(nil),          // 10: connections.chat.FetchChatMessagesRequest
	(*FetchChatMessagesResponse)(nil),         // 11: connections.chat.FetchChatMessagesResponse
	(*GetMessagesRequest)(nil),                // 12: connections.chat.GetMessagesRequest
	(*GetMessagesResponse)(nil),               // 13: connections.chat.GetMessagesResponse
	(*GetSupportRoomsResponse)(nil),           // 14: connections.chat.GetSupportRoomsResponse
	(*MarkMessagesAsSeenUpToDateRequest)(nil), // 15: connections.chat.MarkMessagesAsSeenUpToDateRequest
	(*timestamp.Timestamp)(nil),               // 16: google.protobuf.Timestamp
	(*empty.Empty)(nil),                       // 17: google.protobuf.Empty
}
var file_api_protobuf_spec_connection_chat_v1_proto_depIdxs = []int32{
	16, // 0: connections.chat.RoomConnection.lastActivity:type_name -> google.protobuf.Timestamp
	0,  // 1: connections.chat.Message.type:type_name -> connections.chat.MessageType
	16, // 2: connections.chat.Message.sentAt:type_name -> google.protobuf.Timestamp
	0,  // 3: connections.chat.SendChatMessageRequest.message_type:type_name -> connections.chat.MessageType
	0,  // 4: connections.chat.SendSupportChatMessageRequest.message_type:type_name -> connections.chat.MessageType
	1,  // 5: connections.chat.FetchSupportChatMessagesResponse.connection:type_name -> connections.chat.MessageConnection
	1,  // 6: connections.chat.FetchChatMessagesResponse.connection:type_name -> connections.chat.MessageConnection
	3,  // 7: connections.chat.GetMessagesResponse.message:type_name -> connections.chat.Message
	2,  // 8: connections.chat.GetSupportRoomsResponse.rooms:type_name -> connections.chat.RoomConnection
	16, // 9: connections.chat.MarkMessagesAsSeenUpToDateRequest.date:type_name -> google.protobuf.Timestamp
	4,  // 10: connections.chat.ChatService.SendChatMessage:input_type -> connections.chat.SendChatMessageRequest
	7,  // 11: connections.chat.ChatService.SendSupportChatMessage:input_type -> connections.chat.SendSupportChatMessageRequest
	10, // 12: connections.chat.ChatService.FetchChatMessages:input_type -> connections.chat.FetchChatMessagesRequest
	8,  // 13: connections.chat.ChatService.FetchSupportChatMessages:input_type -> connections.chat.FetchSupportChatMessagesRequest
	15, // 14: connections.chat.ChatService.MarkMessagesAsSeenUpToDate:input_type -> connections.chat.MarkMessagesAsSeenUpToDateRequest
	12, // 15: connections.chat.ChatService.GetMessages:input_type -> connections.chat.GetMessagesRequest
	17, // 16: connections.chat.ChatService.GetSupportRooms:input_type -> google.protobuf.Empty
	5,  // 17: connections.chat.ChatService.SendChatMessage:output_type -> connections.chat.SendChatMessageResponse
	6,  // 18: connections.chat.ChatService.SendSupportChatMessage:output_type -> connections.chat.SendSupportChatMessageResponse
	11, // 19: connections.chat.ChatService.FetchChatMessages:output_type -> connections.chat.FetchChatMessagesResponse
	9,  // 20: connections.chat.ChatService.FetchSupportChatMessages:output_type -> connections.chat.FetchSupportChatMessagesResponse
	17, // 21: connections.chat.ChatService.MarkMessagesAsSeenUpToDate:output_type -> google.protobuf.Empty
	13, // 22: connections.chat.ChatService.GetMessages:output_type -> connections.chat.GetMessagesResponse
	14, // 23: connections.chat.ChatService.GetSupportRooms:output_type -> connections.chat.GetSupportRoomsResponse
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_protobuf_spec_connection_chat_v1_proto_init() }
func file_api_protobuf_spec_connection_chat_v1_proto_init() {
	if File_api_protobuf_spec_connection_chat_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendSupportChatMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendSupportChatMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchSupportChatMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchSupportChatMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchChatMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchChatMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSupportRoomsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protobuf_spec_connection_chat_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkMessagesAsSeenUpToDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_protobuf_spec_connection_chat_v1_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_protobuf_spec_connection_chat_v1_proto_goTypes,
		DependencyIndexes: file_api_protobuf_spec_connection_chat_v1_proto_depIdxs,
		EnumInfos:         file_api_protobuf_spec_connection_chat_v1_proto_enumTypes,
		MessageInfos:      file_api_protobuf_spec_connection_chat_v1_proto_msgTypes,
	}.Build()
	File_api_protobuf_spec_connection_chat_v1_proto = out.File
	file_api_protobuf_spec_connection_chat_v1_proto_rawDesc = nil
	file_api_protobuf_spec_connection_chat_v1_proto_goTypes = nil
	file_api_protobuf_spec_connection_chat_v1_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	SendChatMessage(ctx context.Context, in *SendChatMessageRequest, opts ...grpc.CallOption) (*SendChatMessageResponse, error)
	SendSupportChatMessage(ctx context.Context, in *SendSupportChatMessageRequest, opts ...grpc.CallOption) (*SendSupportChatMessageResponse, error)
	FetchChatMessages(ctx context.Context, in *FetchChatMessagesRequest, opts ...grpc.CallOption) (*FetchChatMessagesResponse, error)
	FetchSupportChatMessages(ctx context.Context, in *FetchSupportChatMessagesRequest, opts ...grpc.CallOption) (*FetchSupportChatMessagesResponse, error)
	MarkMessagesAsSeenUpToDate(ctx context.Context, in *MarkMessagesAsSeenUpToDateRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetMessages(ctx context.Context, in *GetMessagesRequest, opts ...grpc.CallOption) (*GetMessagesResponse, error)
	GetSupportRooms(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetSupportRoomsResponse, error)
}

type chatServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChatServiceClient(cc grpc.ClientConnInterface) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) SendChatMessage(ctx context.Context, in *SendChatMessageRequest, opts ...grpc.CallOption) (*SendChatMessageResponse, error) {
	out := new(SendChatMessageResponse)
	err := c.cc.Invoke(ctx, "/connections.chat.ChatService/SendChatMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) SendSupportChatMessage(ctx context.Context, in *SendSupportChatMessageRequest, opts ...grpc.CallOption) (*SendSupportChatMessageResponse, error) {
	out := new(SendSupportChatMessageResponse)
	err := c.cc.Invoke(ctx, "/connections.chat.ChatService/SendSupportChatMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) FetchChatMessages(ctx context.Context, in *FetchChatMessagesRequest, opts ...grpc.CallOption) (*FetchChatMessagesResponse, error) {
	out := new(FetchChatMessagesResponse)
	err := c.cc.Invoke(ctx, "/connections.chat.ChatService/FetchChatMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) FetchSupportChatMessages(ctx context.Context, in *FetchSupportChatMessagesRequest, opts ...grpc.CallOption) (*FetchSupportChatMessagesResponse, error) {
	out := new(FetchSupportChatMessagesResponse)
	err := c.cc.Invoke(ctx, "/connections.chat.ChatService/FetchSupportChatMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) MarkMessagesAsSeenUpToDate(ctx context.Context, in *MarkMessagesAsSeenUpToDateRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/connections.chat.ChatService/MarkMessagesAsSeenUpToDate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) GetMessages(ctx context.Context, in *GetMessagesRequest, opts ...grpc.CallOption) (*GetMessagesResponse, error) {
	out := new(GetMessagesResponse)
	err := c.cc.Invoke(ctx, "/connections.chat.ChatService/GetMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) GetSupportRooms(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetSupportRoomsResponse, error) {
	out := new(GetSupportRoomsResponse)
	err := c.cc.Invoke(ctx, "/connections.chat.ChatService/GetSupportRooms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	SendChatMessage(context.Context, *SendChatMessageRequest) (*SendChatMessageResponse, error)
	SendSupportChatMessage(context.Context, *SendSupportChatMessageRequest) (*SendSupportChatMessageResponse, error)
	FetchChatMessages(context.Context, *FetchChatMessagesRequest) (*FetchChatMessagesResponse, error)
	FetchSupportChatMessages(context.Context, *FetchSupportChatMessagesRequest) (*FetchSupportChatMessagesResponse, error)
	MarkMessagesAsSeenUpToDate(context.Context, *MarkMessagesAsSeenUpToDateRequest) (*empty.Empty, error)
	GetMessages(context.Context, *GetMessagesRequest) (*GetMessagesResponse, error)
	GetSupportRooms(context.Context, *empty.Empty) (*GetSupportRoomsResponse, error)
}

// UnimplementedChatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChatServiceServer struct {
}

func (*UnimplementedChatServiceServer) SendChatMessage(context.Context, *SendChatMessageRequest) (*SendChatMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendChatMessage not implemented")
}
func (*UnimplementedChatServiceServer) SendSupportChatMessage(context.Context, *SendSupportChatMessageRequest) (*SendSupportChatMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendSupportChatMessage not implemented")
}
func (*UnimplementedChatServiceServer) FetchChatMessages(context.Context, *FetchChatMessagesRequest) (*FetchChatMessagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchChatMessages not implemented")
}
func (*UnimplementedChatServiceServer) FetchSupportChatMessages(context.Context, *FetchSupportChatMessagesRequest) (*FetchSupportChatMessagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchSupportChatMessages not implemented")
}
func (*UnimplementedChatServiceServer) MarkMessagesAsSeenUpToDate(context.Context, *MarkMessagesAsSeenUpToDateRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarkMessagesAsSeenUpToDate not implemented")
}
func (*UnimplementedChatServiceServer) GetMessages(context.Context, *GetMessagesRequest) (*GetMessagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMessages not implemented")
}
func (*UnimplementedChatServiceServer) GetSupportRooms(context.Context, *empty.Empty) (*GetSupportRoomsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSupportRooms not implemented")
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_SendChatMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendChatMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).SendChatMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.chat.ChatService/SendChatMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).SendChatMessage(ctx, req.(*SendChatMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_SendSupportChatMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendSupportChatMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).SendSupportChatMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.chat.ChatService/SendSupportChatMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).SendSupportChatMessage(ctx, req.(*SendSupportChatMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_FetchChatMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchChatMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).FetchChatMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.chat.ChatService/FetchChatMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).FetchChatMessages(ctx, req.(*FetchChatMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_FetchSupportChatMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchSupportChatMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).FetchSupportChatMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.chat.ChatService/FetchSupportChatMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).FetchSupportChatMessages(ctx, req.(*FetchSupportChatMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_MarkMessagesAsSeenUpToDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarkMessagesAsSeenUpToDateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).MarkMessagesAsSeenUpToDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.chat.ChatService/MarkMessagesAsSeenUpToDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).MarkMessagesAsSeenUpToDate(ctx, req.(*MarkMessagesAsSeenUpToDateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_GetMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).GetMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.chat.ChatService/GetMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).GetMessages(ctx, req.(*GetMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_GetSupportRooms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).GetSupportRooms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connections.chat.ChatService/GetSupportRooms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).GetSupportRooms(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "connections.chat.ChatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendChatMessage",
			Handler:    _ChatService_SendChatMessage_Handler,
		},
		{
			MethodName: "SendSupportChatMessage",
			Handler:    _ChatService_SendSupportChatMessage_Handler,
		},
		{
			MethodName: "FetchChatMessages",
			Handler:    _ChatService_FetchChatMessages_Handler,
		},
		{
			MethodName: "FetchSupportChatMessages",
			Handler:    _ChatService_FetchSupportChatMessages_Handler,
		},
		{
			MethodName: "MarkMessagesAsSeenUpToDate",
			Handler:    _ChatService_MarkMessagesAsSeenUpToDate_Handler,
		},
		{
			MethodName: "GetMessages",
			Handler:    _ChatService_GetMessages_Handler,
		},
		{
			MethodName: "GetSupportRooms",
			Handler:    _ChatService_GetSupportRooms_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/protobuf-spec/connection_chat_v1.proto",
}
